{- !!! DO NOT EDIT THIS FILE MANUALLY !!! -}

module Proto.Google.Protobuf.Internals_ exposing (..)

{-| 
This file was automatically generated by
- [`protoc-gen-elm`](https://www.npmjs.com/package/protoc-gen-elm) 3.2.0
- `protoc` 3.19.4
- the following specification files: `google/protobuf/descriptor.proto`

To run it, add a dependency via `elm install` on [`elm-protocol-buffers`](https://package.elm-lang.org/packages/eriktim/elm-protocol-buffers/1.2.0) version 1.2.0 or higher.


-}

import Bytes
import Maybe
import Protobuf.Decode
import Protobuf.Encode
import Protobuf.Types.Int64


{-| The field numbers for the fields of `Proto__Google__Protobuf__UninterpretedOption__NamePart`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersProto__Google__Protobuf__UninterpretedOption__NamePart : { namePart : Int, isExtension : Int }
fieldNumbersProto__Google__Protobuf__UninterpretedOption__NamePart =
    { namePart = 1, isExtension = 2 }


{-| Default for Proto__Google__Protobuf__UninterpretedOption__NamePart. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Google__Protobuf__UninterpretedOption__NamePart : Proto__Google__Protobuf__UninterpretedOption__NamePart
defaultProto__Google__Protobuf__UninterpretedOption__NamePart =
    { namePart = "", isExtension = False }


{-| Declares how to decode a `Proto__Google__Protobuf__UninterpretedOption__NamePart` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Google__Protobuf__UninterpretedOption__NamePart :
    Protobuf.Decode.Decoder Proto__Google__Protobuf__UninterpretedOption__NamePart
decodeProto__Google__Protobuf__UninterpretedOption__NamePart =
    Protobuf.Decode.message
        defaultProto__Google__Protobuf__UninterpretedOption__NamePart
        [ Protobuf.Decode.required 1 Protobuf.Decode.string (\a r -> { r | namePart = a })
        , Protobuf.Decode.required 2 Protobuf.Decode.bool (\a r -> { r | isExtension = a })
        ]


{-| Declares how to encode a `Proto__Google__Protobuf__UninterpretedOption__NamePart` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Google__Protobuf__UninterpretedOption__NamePart :
    Proto__Google__Protobuf__UninterpretedOption__NamePart -> Protobuf.Encode.Encoder
encodeProto__Google__Protobuf__UninterpretedOption__NamePart value =
    Protobuf.Encode.message
        [ ( 1, Protobuf.Encode.string value.namePart ), ( 2, Protobuf.Encode.bool value.isExtension ) ]


{-| `Proto__Google__Protobuf__UninterpretedOption__NamePart` message


-}
type alias Proto__Google__Protobuf__UninterpretedOption__NamePart =
    { namePart : String, isExtension : Bool }


{-| The field numbers for the fields of `Proto__Google__Protobuf__SourceCodeInfo__Location`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersProto__Google__Protobuf__SourceCodeInfo__Location :
    { path : Int, span : Int, leadingComments : Int, trailingComments : Int, leadingDetachedComments : Int }
fieldNumbersProto__Google__Protobuf__SourceCodeInfo__Location =
    { path = 1, span = 2, leadingComments = 3, trailingComments = 4, leadingDetachedComments = 6 }


{-| Default for Proto__Google__Protobuf__SourceCodeInfo__Location. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Google__Protobuf__SourceCodeInfo__Location : Proto__Google__Protobuf__SourceCodeInfo__Location
defaultProto__Google__Protobuf__SourceCodeInfo__Location =
    { path = [], span = [], leadingComments = "", trailingComments = "", leadingDetachedComments = [] }


{-| Declares how to decode a `Proto__Google__Protobuf__SourceCodeInfo__Location` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Google__Protobuf__SourceCodeInfo__Location :
    Protobuf.Decode.Decoder Proto__Google__Protobuf__SourceCodeInfo__Location
decodeProto__Google__Protobuf__SourceCodeInfo__Location =
    Protobuf.Decode.message
        defaultProto__Google__Protobuf__SourceCodeInfo__Location
        [ Protobuf.Decode.repeated 1 Protobuf.Decode.int32 .path (\a r -> { r | path = a })
        , Protobuf.Decode.repeated 2 Protobuf.Decode.int32 .span (\a r -> { r | span = a })
        , Protobuf.Decode.optional 3 Protobuf.Decode.string (\a r -> { r | leadingComments = a })
        , Protobuf.Decode.optional 4 Protobuf.Decode.string (\a r -> { r | trailingComments = a })
        , Protobuf.Decode.repeated
            6
            Protobuf.Decode.string
            .leadingDetachedComments
            (\a r -> { r | leadingDetachedComments = a })
        ]


{-| Declares how to encode a `Proto__Google__Protobuf__SourceCodeInfo__Location` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Google__Protobuf__SourceCodeInfo__Location :
    Proto__Google__Protobuf__SourceCodeInfo__Location -> Protobuf.Encode.Encoder
encodeProto__Google__Protobuf__SourceCodeInfo__Location value =
    Protobuf.Encode.message
        [ ( 1, Protobuf.Encode.list Protobuf.Encode.int32 value.path )
        , ( 2, Protobuf.Encode.list Protobuf.Encode.int32 value.span )
        , ( 3, Protobuf.Encode.string value.leadingComments )
        , ( 4, Protobuf.Encode.string value.trailingComments )
        , ( 6, Protobuf.Encode.list Protobuf.Encode.string value.leadingDetachedComments )
        ]


{-| `Proto__Google__Protobuf__SourceCodeInfo__Location` message


-}
type alias Proto__Google__Protobuf__SourceCodeInfo__Location =
    { path : List Int
    , span : List Int
    , leadingComments : String
    , trailingComments : String
    , leadingDetachedComments : List String
    }


{-| The field numbers for the fields of `Proto__Google__Protobuf__GeneratedCodeInfo__Annotation`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersProto__Google__Protobuf__GeneratedCodeInfo__Annotation :
    { path : Int, sourceFile : Int, begin : Int, end : Int }
fieldNumbersProto__Google__Protobuf__GeneratedCodeInfo__Annotation =
    { path = 1, sourceFile = 2, begin = 3, end = 4 }


{-| Default for Proto__Google__Protobuf__GeneratedCodeInfo__Annotation. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Google__Protobuf__GeneratedCodeInfo__Annotation : Proto__Google__Protobuf__GeneratedCodeInfo__Annotation
defaultProto__Google__Protobuf__GeneratedCodeInfo__Annotation =
    { path = [], sourceFile = "", begin = 0, end = 0 }


{-| Declares how to decode a `Proto__Google__Protobuf__GeneratedCodeInfo__Annotation` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Google__Protobuf__GeneratedCodeInfo__Annotation :
    Protobuf.Decode.Decoder Proto__Google__Protobuf__GeneratedCodeInfo__Annotation
decodeProto__Google__Protobuf__GeneratedCodeInfo__Annotation =
    Protobuf.Decode.message
        defaultProto__Google__Protobuf__GeneratedCodeInfo__Annotation
        [ Protobuf.Decode.repeated 1 Protobuf.Decode.int32 .path (\a r -> { r | path = a })
        , Protobuf.Decode.optional 2 Protobuf.Decode.string (\a r -> { r | sourceFile = a })
        , Protobuf.Decode.optional 3 Protobuf.Decode.int32 (\a r -> { r | begin = a })
        , Protobuf.Decode.optional 4 Protobuf.Decode.int32 (\a r -> { r | end = a })
        ]


{-| Declares how to encode a `Proto__Google__Protobuf__GeneratedCodeInfo__Annotation` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Google__Protobuf__GeneratedCodeInfo__Annotation :
    Proto__Google__Protobuf__GeneratedCodeInfo__Annotation -> Protobuf.Encode.Encoder
encodeProto__Google__Protobuf__GeneratedCodeInfo__Annotation value =
    Protobuf.Encode.message
        [ ( 1, Protobuf.Encode.list Protobuf.Encode.int32 value.path )
        , ( 2, Protobuf.Encode.string value.sourceFile )
        , ( 3, Protobuf.Encode.int32 value.begin )
        , ( 4, Protobuf.Encode.int32 value.end )
        ]


{-| `Proto__Google__Protobuf__GeneratedCodeInfo__Annotation` message


-}
type alias Proto__Google__Protobuf__GeneratedCodeInfo__Annotation =
    { path : List Int, sourceFile : String, begin : Int, end : Int }


{-| The field numbers for the fields of `Proto__Google__Protobuf__EnumDescriptorProto__EnumReservedRange`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersProto__Google__Protobuf__EnumDescriptorProto__EnumReservedRange : { start : Int, end : Int }
fieldNumbersProto__Google__Protobuf__EnumDescriptorProto__EnumReservedRange =
    { start = 1, end = 2 }


{-| Default for Proto__Google__Protobuf__EnumDescriptorProto__EnumReservedRange. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Google__Protobuf__EnumDescriptorProto__EnumReservedRange :
    Proto__Google__Protobuf__EnumDescriptorProto__EnumReservedRange
defaultProto__Google__Protobuf__EnumDescriptorProto__EnumReservedRange =
    { start = 0, end = 0 }


{-| Declares how to decode a `Proto__Google__Protobuf__EnumDescriptorProto__EnumReservedRange` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Google__Protobuf__EnumDescriptorProto__EnumReservedRange :
    Protobuf.Decode.Decoder Proto__Google__Protobuf__EnumDescriptorProto__EnumReservedRange
decodeProto__Google__Protobuf__EnumDescriptorProto__EnumReservedRange =
    Protobuf.Decode.message
        defaultProto__Google__Protobuf__EnumDescriptorProto__EnumReservedRange
        [ Protobuf.Decode.optional 1 Protobuf.Decode.int32 (\a r -> { r | start = a })
        , Protobuf.Decode.optional 2 Protobuf.Decode.int32 (\a r -> { r | end = a })
        ]


{-| Declares how to encode a `Proto__Google__Protobuf__EnumDescriptorProto__EnumReservedRange` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Google__Protobuf__EnumDescriptorProto__EnumReservedRange :
    Proto__Google__Protobuf__EnumDescriptorProto__EnumReservedRange -> Protobuf.Encode.Encoder
encodeProto__Google__Protobuf__EnumDescriptorProto__EnumReservedRange value =
    Protobuf.Encode.message [ ( 1, Protobuf.Encode.int32 value.start ), ( 2, Protobuf.Encode.int32 value.end ) ]


{-| `Proto__Google__Protobuf__EnumDescriptorProto__EnumReservedRange` message


-}
type alias Proto__Google__Protobuf__EnumDescriptorProto__EnumReservedRange =
    { start : Int, end : Int }


{-| The field numbers for the fields of `Proto__Google__Protobuf__DescriptorProto__ReservedRange`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersProto__Google__Protobuf__DescriptorProto__ReservedRange : { start : Int, end : Int }
fieldNumbersProto__Google__Protobuf__DescriptorProto__ReservedRange =
    { start = 1, end = 2 }


{-| Default for Proto__Google__Protobuf__DescriptorProto__ReservedRange. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Google__Protobuf__DescriptorProto__ReservedRange : Proto__Google__Protobuf__DescriptorProto__ReservedRange
defaultProto__Google__Protobuf__DescriptorProto__ReservedRange =
    { start = 0, end = 0 }


{-| Declares how to decode a `Proto__Google__Protobuf__DescriptorProto__ReservedRange` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Google__Protobuf__DescriptorProto__ReservedRange :
    Protobuf.Decode.Decoder Proto__Google__Protobuf__DescriptorProto__ReservedRange
decodeProto__Google__Protobuf__DescriptorProto__ReservedRange =
    Protobuf.Decode.message
        defaultProto__Google__Protobuf__DescriptorProto__ReservedRange
        [ Protobuf.Decode.optional 1 Protobuf.Decode.int32 (\a r -> { r | start = a })
        , Protobuf.Decode.optional 2 Protobuf.Decode.int32 (\a r -> { r | end = a })
        ]


{-| Declares how to encode a `Proto__Google__Protobuf__DescriptorProto__ReservedRange` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Google__Protobuf__DescriptorProto__ReservedRange :
    Proto__Google__Protobuf__DescriptorProto__ReservedRange -> Protobuf.Encode.Encoder
encodeProto__Google__Protobuf__DescriptorProto__ReservedRange value =
    Protobuf.Encode.message [ ( 1, Protobuf.Encode.int32 value.start ), ( 2, Protobuf.Encode.int32 value.end ) ]


{-| `Proto__Google__Protobuf__DescriptorProto__ReservedRange` message


-}
type alias Proto__Google__Protobuf__DescriptorProto__ReservedRange =
    { start : Int, end : Int }


{-| The field numbers for the fields of `Proto__Google__Protobuf__DescriptorProto__ExtensionRange`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersProto__Google__Protobuf__DescriptorProto__ExtensionRange : { start : Int, end : Int, options : Int }
fieldNumbersProto__Google__Protobuf__DescriptorProto__ExtensionRange =
    { start = 1, end = 2, options = 3 }


{-| Default for Proto__Google__Protobuf__DescriptorProto__ExtensionRange. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Google__Protobuf__DescriptorProto__ExtensionRange :
    Proto__Google__Protobuf__DescriptorProto__ExtensionRange
defaultProto__Google__Protobuf__DescriptorProto__ExtensionRange =
    { start = 0, end = 0, options = Nothing }


{-| Declares how to decode a `Proto__Google__Protobuf__DescriptorProto__ExtensionRange` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Google__Protobuf__DescriptorProto__ExtensionRange :
    Protobuf.Decode.Decoder Proto__Google__Protobuf__DescriptorProto__ExtensionRange
decodeProto__Google__Protobuf__DescriptorProto__ExtensionRange =
    Protobuf.Decode.message
        defaultProto__Google__Protobuf__DescriptorProto__ExtensionRange
        [ Protobuf.Decode.optional 1 Protobuf.Decode.int32 (\a r -> { r | start = a })
        , Protobuf.Decode.optional 2 Protobuf.Decode.int32 (\a r -> { r | end = a })
        , Protobuf.Decode.optional
            3
            (Protobuf.Decode.map Just decodeProto__Google__Protobuf__ExtensionRangeOptions)
            (\a r -> { r | options = a })
        ]


{-| Declares how to encode a `Proto__Google__Protobuf__DescriptorProto__ExtensionRange` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Google__Protobuf__DescriptorProto__ExtensionRange :
    Proto__Google__Protobuf__DescriptorProto__ExtensionRange -> Protobuf.Encode.Encoder
encodeProto__Google__Protobuf__DescriptorProto__ExtensionRange value =
    Protobuf.Encode.message
        [ ( 1, Protobuf.Encode.int32 value.start )
        , ( 2, Protobuf.Encode.int32 value.end )
        , ( 3
          , (Maybe.map encodeProto__Google__Protobuf__ExtensionRangeOptions >> Maybe.withDefault Protobuf.Encode.none)
                value.options
          )
        ]


{-| `Proto__Google__Protobuf__DescriptorProto__ExtensionRange` message


-}
type alias Proto__Google__Protobuf__DescriptorProto__ExtensionRange =
    { start : Int, end : Int, options : Maybe Proto__Google__Protobuf__ExtensionRangeOptions }


{-| The field numbers for the fields of `Proto__Google__Protobuf__GeneratedCodeInfo`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersProto__Google__Protobuf__GeneratedCodeInfo : { annotation : Int }
fieldNumbersProto__Google__Protobuf__GeneratedCodeInfo =
    { annotation = 1 }


{-| Default for Proto__Google__Protobuf__GeneratedCodeInfo. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Google__Protobuf__GeneratedCodeInfo : Proto__Google__Protobuf__GeneratedCodeInfo
defaultProto__Google__Protobuf__GeneratedCodeInfo =
    { annotation = [] }


{-| Declares how to decode a `Proto__Google__Protobuf__GeneratedCodeInfo` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Google__Protobuf__GeneratedCodeInfo : Protobuf.Decode.Decoder Proto__Google__Protobuf__GeneratedCodeInfo
decodeProto__Google__Protobuf__GeneratedCodeInfo =
    Protobuf.Decode.message
        defaultProto__Google__Protobuf__GeneratedCodeInfo
        [ Protobuf.Decode.repeated
            1
            decodeProto__Google__Protobuf__GeneratedCodeInfo__Annotation
            .annotation
            (\a r -> { r | annotation = a })
        ]


{-| Declares how to encode a `Proto__Google__Protobuf__GeneratedCodeInfo` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Google__Protobuf__GeneratedCodeInfo : Proto__Google__Protobuf__GeneratedCodeInfo -> Protobuf.Encode.Encoder
encodeProto__Google__Protobuf__GeneratedCodeInfo value =
    Protobuf.Encode.message
        [ ( 1, Protobuf.Encode.list encodeProto__Google__Protobuf__GeneratedCodeInfo__Annotation value.annotation ) ]


{-| `Proto__Google__Protobuf__GeneratedCodeInfo` message


-}
type alias Proto__Google__Protobuf__GeneratedCodeInfo =
    { annotation : List Proto__Google__Protobuf__GeneratedCodeInfo__Annotation }


{-| The field numbers for the fields of `Proto__Google__Protobuf__SourceCodeInfo`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersProto__Google__Protobuf__SourceCodeInfo : { location : Int }
fieldNumbersProto__Google__Protobuf__SourceCodeInfo =
    { location = 1 }


{-| Default for Proto__Google__Protobuf__SourceCodeInfo. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Google__Protobuf__SourceCodeInfo : Proto__Google__Protobuf__SourceCodeInfo
defaultProto__Google__Protobuf__SourceCodeInfo =
    { location = [] }


{-| Declares how to decode a `Proto__Google__Protobuf__SourceCodeInfo` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Google__Protobuf__SourceCodeInfo : Protobuf.Decode.Decoder Proto__Google__Protobuf__SourceCodeInfo
decodeProto__Google__Protobuf__SourceCodeInfo =
    Protobuf.Decode.message
        defaultProto__Google__Protobuf__SourceCodeInfo
        [ Protobuf.Decode.repeated
            1
            decodeProto__Google__Protobuf__SourceCodeInfo__Location
            .location
            (\a r -> { r | location = a })
        ]


{-| Declares how to encode a `Proto__Google__Protobuf__SourceCodeInfo` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Google__Protobuf__SourceCodeInfo : Proto__Google__Protobuf__SourceCodeInfo -> Protobuf.Encode.Encoder
encodeProto__Google__Protobuf__SourceCodeInfo value =
    Protobuf.Encode.message
        [ ( 1, Protobuf.Encode.list encodeProto__Google__Protobuf__SourceCodeInfo__Location value.location ) ]


{-| `Proto__Google__Protobuf__SourceCodeInfo` message


-}
type alias Proto__Google__Protobuf__SourceCodeInfo =
    { location : List Proto__Google__Protobuf__SourceCodeInfo__Location }


{-| The field numbers for the fields of `Proto__Google__Protobuf__UninterpretedOption`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersProto__Google__Protobuf__UninterpretedOption :
    { name : Int
    , identifierValue : Int
    , positiveIntValue : Int
    , negativeIntValue : Int
    , doubleValue : Int
    , stringValue : Int
    , aggregateValue : Int
    }
fieldNumbersProto__Google__Protobuf__UninterpretedOption =
    { name = 2
    , identifierValue = 3
    , positiveIntValue = 4
    , negativeIntValue = 5
    , doubleValue = 6
    , stringValue = 7
    , aggregateValue = 8
    }


{-| Default for Proto__Google__Protobuf__UninterpretedOption. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Google__Protobuf__UninterpretedOption : Proto__Google__Protobuf__UninterpretedOption
defaultProto__Google__Protobuf__UninterpretedOption =
    { name = []
    , identifierValue = ""
    , positiveIntValue = Protobuf.Types.Int64.fromInts 0 0
    , negativeIntValue = Protobuf.Types.Int64.fromInts 0 0
    , doubleValue = 0
    , stringValue = Protobuf.Encode.encode <| Protobuf.Encode.string ""
    , aggregateValue = ""
    }


{-| Declares how to decode a `Proto__Google__Protobuf__UninterpretedOption` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Google__Protobuf__UninterpretedOption :
    Protobuf.Decode.Decoder Proto__Google__Protobuf__UninterpretedOption
decodeProto__Google__Protobuf__UninterpretedOption =
    Protobuf.Decode.message
        defaultProto__Google__Protobuf__UninterpretedOption
        [ Protobuf.Decode.repeated
            2
            decodeProto__Google__Protobuf__UninterpretedOption__NamePart
            .name
            (\a r -> { r | name = a })
        , Protobuf.Decode.optional 3 Protobuf.Decode.string (\a r -> { r | identifierValue = a })
        , Protobuf.Decode.optional 4 Protobuf.Decode.uint64 (\a r -> { r | positiveIntValue = a })
        , Protobuf.Decode.optional 5 Protobuf.Decode.int64 (\a r -> { r | negativeIntValue = a })
        , Protobuf.Decode.optional 6 Protobuf.Decode.double (\a r -> { r | doubleValue = a })
        , Protobuf.Decode.optional 7 Protobuf.Decode.bytes (\a r -> { r | stringValue = a })
        , Protobuf.Decode.optional 8 Protobuf.Decode.string (\a r -> { r | aggregateValue = a })
        ]


{-| Declares how to encode a `Proto__Google__Protobuf__UninterpretedOption` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Google__Protobuf__UninterpretedOption :
    Proto__Google__Protobuf__UninterpretedOption -> Protobuf.Encode.Encoder
encodeProto__Google__Protobuf__UninterpretedOption value =
    Protobuf.Encode.message
        [ ( 2, Protobuf.Encode.list encodeProto__Google__Protobuf__UninterpretedOption__NamePart value.name )
        , ( 3, Protobuf.Encode.string value.identifierValue )
        , ( 4, Protobuf.Encode.uint64 value.positiveIntValue )
        , ( 5, Protobuf.Encode.int64 value.negativeIntValue )
        , ( 6, Protobuf.Encode.double value.doubleValue )
        , ( 7, Protobuf.Encode.bytes value.stringValue )
        , ( 8, Protobuf.Encode.string value.aggregateValue )
        ]


{-| `Proto__Google__Protobuf__UninterpretedOption` message


-}
type alias Proto__Google__Protobuf__UninterpretedOption =
    { name : List Proto__Google__Protobuf__UninterpretedOption__NamePart
    , identifierValue : String
    , positiveIntValue : Protobuf.Types.Int64.Int64
    , negativeIntValue : Protobuf.Types.Int64.Int64
    , doubleValue : Float
    , stringValue : Bytes.Bytes
    , aggregateValue : String
    }


{-| The field numbers for the fields of `Proto__Google__Protobuf__MethodOptions`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersProto__Google__Protobuf__MethodOptions :
    { deprecated : Int, idempotencyLevel : Int, uninterpretedOption : Int }
fieldNumbersProto__Google__Protobuf__MethodOptions =
    { deprecated = 33, idempotencyLevel = 34, uninterpretedOption = 999 }


{-| Default for Proto__Google__Protobuf__MethodOptions. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Google__Protobuf__MethodOptions : Proto__Google__Protobuf__MethodOptions
defaultProto__Google__Protobuf__MethodOptions =
    { deprecated = False
    , idempotencyLevel = defaultProto__Google__Protobuf__MethodOptions__IdempotencyLevel
    , uninterpretedOption = []
    }


{-| Declares how to decode a `Proto__Google__Protobuf__MethodOptions` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Google__Protobuf__MethodOptions : Protobuf.Decode.Decoder Proto__Google__Protobuf__MethodOptions
decodeProto__Google__Protobuf__MethodOptions =
    Protobuf.Decode.message
        defaultProto__Google__Protobuf__MethodOptions
        [ Protobuf.Decode.optional 33 Protobuf.Decode.bool (\a r -> { r | deprecated = a })
        , Protobuf.Decode.optional
            34
            decodeProto__Google__Protobuf__MethodOptions__IdempotencyLevel
            (\a r -> { r | idempotencyLevel = a })
        , Protobuf.Decode.repeated
            999
            decodeProto__Google__Protobuf__UninterpretedOption
            .uninterpretedOption
            (\a r -> { r | uninterpretedOption = a })
        ]


{-| Declares how to encode a `Proto__Google__Protobuf__MethodOptions` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Google__Protobuf__MethodOptions : Proto__Google__Protobuf__MethodOptions -> Protobuf.Encode.Encoder
encodeProto__Google__Protobuf__MethodOptions value =
    Protobuf.Encode.message
        [ ( 33, Protobuf.Encode.bool value.deprecated )
        , ( 34, encodeProto__Google__Protobuf__MethodOptions__IdempotencyLevel value.idempotencyLevel )
        , ( 999, Protobuf.Encode.list encodeProto__Google__Protobuf__UninterpretedOption value.uninterpretedOption )
        ]


{-| `Proto__Google__Protobuf__MethodOptions` message


-}
type alias Proto__Google__Protobuf__MethodOptions =
    { deprecated : Bool
    , idempotencyLevel : Proto__Google__Protobuf__MethodOptions__IdempotencyLevel
    , uninterpretedOption : List Proto__Google__Protobuf__UninterpretedOption
    }


{-| The field numbers for the fields of `Proto__Google__Protobuf__ServiceOptions`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersProto__Google__Protobuf__ServiceOptions : { deprecated : Int, uninterpretedOption : Int }
fieldNumbersProto__Google__Protobuf__ServiceOptions =
    { deprecated = 33, uninterpretedOption = 999 }


{-| Default for Proto__Google__Protobuf__ServiceOptions. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Google__Protobuf__ServiceOptions : Proto__Google__Protobuf__ServiceOptions
defaultProto__Google__Protobuf__ServiceOptions =
    { deprecated = False, uninterpretedOption = [] }


{-| Declares how to decode a `Proto__Google__Protobuf__ServiceOptions` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Google__Protobuf__ServiceOptions : Protobuf.Decode.Decoder Proto__Google__Protobuf__ServiceOptions
decodeProto__Google__Protobuf__ServiceOptions =
    Protobuf.Decode.message
        defaultProto__Google__Protobuf__ServiceOptions
        [ Protobuf.Decode.optional 33 Protobuf.Decode.bool (\a r -> { r | deprecated = a })
        , Protobuf.Decode.repeated
            999
            decodeProto__Google__Protobuf__UninterpretedOption
            .uninterpretedOption
            (\a r -> { r | uninterpretedOption = a })
        ]


{-| Declares how to encode a `Proto__Google__Protobuf__ServiceOptions` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Google__Protobuf__ServiceOptions : Proto__Google__Protobuf__ServiceOptions -> Protobuf.Encode.Encoder
encodeProto__Google__Protobuf__ServiceOptions value =
    Protobuf.Encode.message
        [ ( 33, Protobuf.Encode.bool value.deprecated )
        , ( 999, Protobuf.Encode.list encodeProto__Google__Protobuf__UninterpretedOption value.uninterpretedOption )
        ]


{-| `Proto__Google__Protobuf__ServiceOptions` message


-}
type alias Proto__Google__Protobuf__ServiceOptions =
    { deprecated : Bool, uninterpretedOption : List Proto__Google__Protobuf__UninterpretedOption }


{-| The field numbers for the fields of `Proto__Google__Protobuf__EnumValueOptions`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersProto__Google__Protobuf__EnumValueOptions : { deprecated : Int, uninterpretedOption : Int }
fieldNumbersProto__Google__Protobuf__EnumValueOptions =
    { deprecated = 1, uninterpretedOption = 999 }


{-| Default for Proto__Google__Protobuf__EnumValueOptions. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Google__Protobuf__EnumValueOptions : Proto__Google__Protobuf__EnumValueOptions
defaultProto__Google__Protobuf__EnumValueOptions =
    { deprecated = False, uninterpretedOption = [] }


{-| Declares how to decode a `Proto__Google__Protobuf__EnumValueOptions` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Google__Protobuf__EnumValueOptions : Protobuf.Decode.Decoder Proto__Google__Protobuf__EnumValueOptions
decodeProto__Google__Protobuf__EnumValueOptions =
    Protobuf.Decode.message
        defaultProto__Google__Protobuf__EnumValueOptions
        [ Protobuf.Decode.optional 1 Protobuf.Decode.bool (\a r -> { r | deprecated = a })
        , Protobuf.Decode.repeated
            999
            decodeProto__Google__Protobuf__UninterpretedOption
            .uninterpretedOption
            (\a r -> { r | uninterpretedOption = a })
        ]


{-| Declares how to encode a `Proto__Google__Protobuf__EnumValueOptions` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Google__Protobuf__EnumValueOptions : Proto__Google__Protobuf__EnumValueOptions -> Protobuf.Encode.Encoder
encodeProto__Google__Protobuf__EnumValueOptions value =
    Protobuf.Encode.message
        [ ( 1, Protobuf.Encode.bool value.deprecated )
        , ( 999, Protobuf.Encode.list encodeProto__Google__Protobuf__UninterpretedOption value.uninterpretedOption )
        ]


{-| `Proto__Google__Protobuf__EnumValueOptions` message


-}
type alias Proto__Google__Protobuf__EnumValueOptions =
    { deprecated : Bool, uninterpretedOption : List Proto__Google__Protobuf__UninterpretedOption }


{-| The field numbers for the fields of `Proto__Google__Protobuf__EnumOptions`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersProto__Google__Protobuf__EnumOptions : { allowAlias : Int, deprecated : Int, uninterpretedOption : Int }
fieldNumbersProto__Google__Protobuf__EnumOptions =
    { allowAlias = 2, deprecated = 3, uninterpretedOption = 999 }


{-| Default for Proto__Google__Protobuf__EnumOptions. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Google__Protobuf__EnumOptions : Proto__Google__Protobuf__EnumOptions
defaultProto__Google__Protobuf__EnumOptions =
    { allowAlias = False, deprecated = False, uninterpretedOption = [] }


{-| Declares how to decode a `Proto__Google__Protobuf__EnumOptions` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Google__Protobuf__EnumOptions : Protobuf.Decode.Decoder Proto__Google__Protobuf__EnumOptions
decodeProto__Google__Protobuf__EnumOptions =
    Protobuf.Decode.message
        defaultProto__Google__Protobuf__EnumOptions
        [ Protobuf.Decode.optional 2 Protobuf.Decode.bool (\a r -> { r | allowAlias = a })
        , Protobuf.Decode.optional 3 Protobuf.Decode.bool (\a r -> { r | deprecated = a })
        , Protobuf.Decode.repeated
            999
            decodeProto__Google__Protobuf__UninterpretedOption
            .uninterpretedOption
            (\a r -> { r | uninterpretedOption = a })
        ]


{-| Declares how to encode a `Proto__Google__Protobuf__EnumOptions` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Google__Protobuf__EnumOptions : Proto__Google__Protobuf__EnumOptions -> Protobuf.Encode.Encoder
encodeProto__Google__Protobuf__EnumOptions value =
    Protobuf.Encode.message
        [ ( 2, Protobuf.Encode.bool value.allowAlias )
        , ( 3, Protobuf.Encode.bool value.deprecated )
        , ( 999, Protobuf.Encode.list encodeProto__Google__Protobuf__UninterpretedOption value.uninterpretedOption )
        ]


{-| `Proto__Google__Protobuf__EnumOptions` message


-}
type alias Proto__Google__Protobuf__EnumOptions =
    { allowAlias : Bool, deprecated : Bool, uninterpretedOption : List Proto__Google__Protobuf__UninterpretedOption }


{-| The field numbers for the fields of `Proto__Google__Protobuf__OneofOptions`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersProto__Google__Protobuf__OneofOptions : { uninterpretedOption : Int }
fieldNumbersProto__Google__Protobuf__OneofOptions =
    { uninterpretedOption = 999 }


{-| Default for Proto__Google__Protobuf__OneofOptions. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Google__Protobuf__OneofOptions : Proto__Google__Protobuf__OneofOptions
defaultProto__Google__Protobuf__OneofOptions =
    { uninterpretedOption = [] }


{-| Declares how to decode a `Proto__Google__Protobuf__OneofOptions` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Google__Protobuf__OneofOptions : Protobuf.Decode.Decoder Proto__Google__Protobuf__OneofOptions
decodeProto__Google__Protobuf__OneofOptions =
    Protobuf.Decode.message
        defaultProto__Google__Protobuf__OneofOptions
        [ Protobuf.Decode.repeated
            999
            decodeProto__Google__Protobuf__UninterpretedOption
            .uninterpretedOption
            (\a r -> { r | uninterpretedOption = a })
        ]


{-| Declares how to encode a `Proto__Google__Protobuf__OneofOptions` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Google__Protobuf__OneofOptions : Proto__Google__Protobuf__OneofOptions -> Protobuf.Encode.Encoder
encodeProto__Google__Protobuf__OneofOptions value =
    Protobuf.Encode.message
        [ ( 999, Protobuf.Encode.list encodeProto__Google__Protobuf__UninterpretedOption value.uninterpretedOption ) ]


{-| `Proto__Google__Protobuf__OneofOptions` message


-}
type alias Proto__Google__Protobuf__OneofOptions =
    { uninterpretedOption : List Proto__Google__Protobuf__UninterpretedOption }


{-| The field numbers for the fields of `Proto__Google__Protobuf__FieldOptions`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersProto__Google__Protobuf__FieldOptions :
    { ctype : Int, packed : Int, jstype : Int, lazy : Int, deprecated : Int, weak : Int, uninterpretedOption : Int }
fieldNumbersProto__Google__Protobuf__FieldOptions =
    { ctype = 1, packed = 2, jstype = 6, lazy = 5, deprecated = 3, weak = 10, uninterpretedOption = 999 }


{-| Default for Proto__Google__Protobuf__FieldOptions. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Google__Protobuf__FieldOptions : Proto__Google__Protobuf__FieldOptions
defaultProto__Google__Protobuf__FieldOptions =
    { ctype = defaultProto__Google__Protobuf__FieldOptions__CType
    , packed = False
    , jstype = defaultProto__Google__Protobuf__FieldOptions__JSType
    , lazy = False
    , deprecated = False
    , weak = False
    , uninterpretedOption = []
    }


{-| Declares how to decode a `Proto__Google__Protobuf__FieldOptions` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Google__Protobuf__FieldOptions : Protobuf.Decode.Decoder Proto__Google__Protobuf__FieldOptions
decodeProto__Google__Protobuf__FieldOptions =
    Protobuf.Decode.message
        defaultProto__Google__Protobuf__FieldOptions
        [ Protobuf.Decode.optional 1 decodeProto__Google__Protobuf__FieldOptions__CType (\a r -> { r | ctype = a })
        , Protobuf.Decode.optional 2 Protobuf.Decode.bool (\a r -> { r | packed = a })
        , Protobuf.Decode.optional 6 decodeProto__Google__Protobuf__FieldOptions__JSType (\a r -> { r | jstype = a })
        , Protobuf.Decode.optional 5 Protobuf.Decode.bool (\a r -> { r | lazy = a })
        , Protobuf.Decode.optional 3 Protobuf.Decode.bool (\a r -> { r | deprecated = a })
        , Protobuf.Decode.optional 10 Protobuf.Decode.bool (\a r -> { r | weak = a })
        , Protobuf.Decode.repeated
            999
            decodeProto__Google__Protobuf__UninterpretedOption
            .uninterpretedOption
            (\a r -> { r | uninterpretedOption = a })
        ]


{-| Declares how to encode a `Proto__Google__Protobuf__FieldOptions` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Google__Protobuf__FieldOptions : Proto__Google__Protobuf__FieldOptions -> Protobuf.Encode.Encoder
encodeProto__Google__Protobuf__FieldOptions value =
    Protobuf.Encode.message
        [ ( 1, encodeProto__Google__Protobuf__FieldOptions__CType value.ctype )
        , ( 2, Protobuf.Encode.bool value.packed )
        , ( 6, encodeProto__Google__Protobuf__FieldOptions__JSType value.jstype )
        , ( 5, Protobuf.Encode.bool value.lazy )
        , ( 3, Protobuf.Encode.bool value.deprecated )
        , ( 10, Protobuf.Encode.bool value.weak )
        , ( 999, Protobuf.Encode.list encodeProto__Google__Protobuf__UninterpretedOption value.uninterpretedOption )
        ]


{-| `Proto__Google__Protobuf__FieldOptions` message


-}
type alias Proto__Google__Protobuf__FieldOptions =
    { ctype : Proto__Google__Protobuf__FieldOptions__CType
    , packed : Bool
    , jstype : Proto__Google__Protobuf__FieldOptions__JSType
    , lazy : Bool
    , deprecated : Bool
    , weak : Bool
    , uninterpretedOption : List Proto__Google__Protobuf__UninterpretedOption
    }


{-| The field numbers for the fields of `Proto__Google__Protobuf__MessageOptions`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersProto__Google__Protobuf__MessageOptions :
    { messageSetWireFormat : Int
    , noStandardDescriptorAccessor : Int
    , deprecated : Int
    , mapEntry : Int
    , uninterpretedOption : Int
    }
fieldNumbersProto__Google__Protobuf__MessageOptions =
    { messageSetWireFormat = 1
    , noStandardDescriptorAccessor = 2
    , deprecated = 3
    , mapEntry = 7
    , uninterpretedOption = 999
    }


{-| Default for Proto__Google__Protobuf__MessageOptions. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Google__Protobuf__MessageOptions : Proto__Google__Protobuf__MessageOptions
defaultProto__Google__Protobuf__MessageOptions =
    { messageSetWireFormat = False
    , noStandardDescriptorAccessor = False
    , deprecated = False
    , mapEntry = False
    , uninterpretedOption = []
    }


{-| Declares how to decode a `Proto__Google__Protobuf__MessageOptions` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Google__Protobuf__MessageOptions : Protobuf.Decode.Decoder Proto__Google__Protobuf__MessageOptions
decodeProto__Google__Protobuf__MessageOptions =
    Protobuf.Decode.message
        defaultProto__Google__Protobuf__MessageOptions
        [ Protobuf.Decode.optional 1 Protobuf.Decode.bool (\a r -> { r | messageSetWireFormat = a })
        , Protobuf.Decode.optional 2 Protobuf.Decode.bool (\a r -> { r | noStandardDescriptorAccessor = a })
        , Protobuf.Decode.optional 3 Protobuf.Decode.bool (\a r -> { r | deprecated = a })
        , Protobuf.Decode.optional 7 Protobuf.Decode.bool (\a r -> { r | mapEntry = a })
        , Protobuf.Decode.repeated
            999
            decodeProto__Google__Protobuf__UninterpretedOption
            .uninterpretedOption
            (\a r -> { r | uninterpretedOption = a })
        ]


{-| Declares how to encode a `Proto__Google__Protobuf__MessageOptions` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Google__Protobuf__MessageOptions : Proto__Google__Protobuf__MessageOptions -> Protobuf.Encode.Encoder
encodeProto__Google__Protobuf__MessageOptions value =
    Protobuf.Encode.message
        [ ( 1, Protobuf.Encode.bool value.messageSetWireFormat )
        , ( 2, Protobuf.Encode.bool value.noStandardDescriptorAccessor )
        , ( 3, Protobuf.Encode.bool value.deprecated )
        , ( 7, Protobuf.Encode.bool value.mapEntry )
        , ( 999, Protobuf.Encode.list encodeProto__Google__Protobuf__UninterpretedOption value.uninterpretedOption )
        ]


{-| `Proto__Google__Protobuf__MessageOptions` message


-}
type alias Proto__Google__Protobuf__MessageOptions =
    { messageSetWireFormat : Bool
    , noStandardDescriptorAccessor : Bool
    , deprecated : Bool
    , mapEntry : Bool
    , uninterpretedOption : List Proto__Google__Protobuf__UninterpretedOption
    }


{-| The field numbers for the fields of `Proto__Google__Protobuf__FileOptions`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersProto__Google__Protobuf__FileOptions :
    { javaPackage : Int
    , javaOuterClassname : Int
    , javaMultipleFiles : Int
    , javaGenerateEqualsAndHash : Int
    , javaStringCheckUtf8 : Int
    , optimizeFor : Int
    , goPackage : Int
    , ccGenericServices : Int
    , javaGenericServices : Int
    , pyGenericServices : Int
    , phpGenericServices : Int
    , deprecated : Int
    , ccEnableArenas : Int
    , objcClassPrefix : Int
    , csharpNamespace : Int
    , swiftPrefix : Int
    , phpClassPrefix : Int
    , phpNamespace : Int
    , phpMetadataNamespace : Int
    , rubyPackage : Int
    , uninterpretedOption : Int
    }
fieldNumbersProto__Google__Protobuf__FileOptions =
    { javaPackage = 1
    , javaOuterClassname = 8
    , javaMultipleFiles = 10
    , javaGenerateEqualsAndHash = 20
    , javaStringCheckUtf8 = 27
    , optimizeFor = 9
    , goPackage = 11
    , ccGenericServices = 16
    , javaGenericServices = 17
    , pyGenericServices = 18
    , phpGenericServices = 42
    , deprecated = 23
    , ccEnableArenas = 31
    , objcClassPrefix = 36
    , csharpNamespace = 37
    , swiftPrefix = 39
    , phpClassPrefix = 40
    , phpNamespace = 41
    , phpMetadataNamespace = 44
    , rubyPackage = 45
    , uninterpretedOption = 999
    }


{-| Default for Proto__Google__Protobuf__FileOptions. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Google__Protobuf__FileOptions : Proto__Google__Protobuf__FileOptions
defaultProto__Google__Protobuf__FileOptions =
    { javaPackage = ""
    , javaOuterClassname = ""
    , javaMultipleFiles = False
    , javaGenerateEqualsAndHash = False
    , javaStringCheckUtf8 = False
    , optimizeFor = defaultProto__Google__Protobuf__FileOptions__OptimizeMode
    , goPackage = ""
    , ccGenericServices = False
    , javaGenericServices = False
    , pyGenericServices = False
    , phpGenericServices = False
    , deprecated = False
    , ccEnableArenas = True
    , objcClassPrefix = ""
    , csharpNamespace = ""
    , swiftPrefix = ""
    , phpClassPrefix = ""
    , phpNamespace = ""
    , phpMetadataNamespace = ""
    , rubyPackage = ""
    , uninterpretedOption = []
    }


{-| Declares how to decode a `Proto__Google__Protobuf__FileOptions` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Google__Protobuf__FileOptions : Protobuf.Decode.Decoder Proto__Google__Protobuf__FileOptions
decodeProto__Google__Protobuf__FileOptions =
    Protobuf.Decode.message
        defaultProto__Google__Protobuf__FileOptions
        [ Protobuf.Decode.optional 1 Protobuf.Decode.string (\a r -> { r | javaPackage = a })
        , Protobuf.Decode.optional 8 Protobuf.Decode.string (\a r -> { r | javaOuterClassname = a })
        , Protobuf.Decode.optional 10 Protobuf.Decode.bool (\a r -> { r | javaMultipleFiles = a })
        , Protobuf.Decode.optional 20 Protobuf.Decode.bool (\a r -> { r | javaGenerateEqualsAndHash = a })
        , Protobuf.Decode.optional 27 Protobuf.Decode.bool (\a r -> { r | javaStringCheckUtf8 = a })
        , Protobuf.Decode.optional
            9
            decodeProto__Google__Protobuf__FileOptions__OptimizeMode
            (\a r -> { r | optimizeFor = a })
        , Protobuf.Decode.optional 11 Protobuf.Decode.string (\a r -> { r | goPackage = a })
        , Protobuf.Decode.optional 16 Protobuf.Decode.bool (\a r -> { r | ccGenericServices = a })
        , Protobuf.Decode.optional 17 Protobuf.Decode.bool (\a r -> { r | javaGenericServices = a })
        , Protobuf.Decode.optional 18 Protobuf.Decode.bool (\a r -> { r | pyGenericServices = a })
        , Protobuf.Decode.optional 42 Protobuf.Decode.bool (\a r -> { r | phpGenericServices = a })
        , Protobuf.Decode.optional 23 Protobuf.Decode.bool (\a r -> { r | deprecated = a })
        , Protobuf.Decode.optional 31 Protobuf.Decode.bool (\a r -> { r | ccEnableArenas = a })
        , Protobuf.Decode.optional 36 Protobuf.Decode.string (\a r -> { r | objcClassPrefix = a })
        , Protobuf.Decode.optional 37 Protobuf.Decode.string (\a r -> { r | csharpNamespace = a })
        , Protobuf.Decode.optional 39 Protobuf.Decode.string (\a r -> { r | swiftPrefix = a })
        , Protobuf.Decode.optional 40 Protobuf.Decode.string (\a r -> { r | phpClassPrefix = a })
        , Protobuf.Decode.optional 41 Protobuf.Decode.string (\a r -> { r | phpNamespace = a })
        , Protobuf.Decode.optional 44 Protobuf.Decode.string (\a r -> { r | phpMetadataNamespace = a })
        , Protobuf.Decode.optional 45 Protobuf.Decode.string (\a r -> { r | rubyPackage = a })
        , Protobuf.Decode.repeated
            999
            decodeProto__Google__Protobuf__UninterpretedOption
            .uninterpretedOption
            (\a r -> { r | uninterpretedOption = a })
        ]


{-| Declares how to encode a `Proto__Google__Protobuf__FileOptions` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Google__Protobuf__FileOptions : Proto__Google__Protobuf__FileOptions -> Protobuf.Encode.Encoder
encodeProto__Google__Protobuf__FileOptions value =
    Protobuf.Encode.message
        [ ( 1, Protobuf.Encode.string value.javaPackage )
        , ( 8, Protobuf.Encode.string value.javaOuterClassname )
        , ( 10, Protobuf.Encode.bool value.javaMultipleFiles )
        , ( 20, Protobuf.Encode.bool value.javaGenerateEqualsAndHash )
        , ( 27, Protobuf.Encode.bool value.javaStringCheckUtf8 )
        , ( 9, encodeProto__Google__Protobuf__FileOptions__OptimizeMode value.optimizeFor )
        , ( 11, Protobuf.Encode.string value.goPackage )
        , ( 16, Protobuf.Encode.bool value.ccGenericServices )
        , ( 17, Protobuf.Encode.bool value.javaGenericServices )
        , ( 18, Protobuf.Encode.bool value.pyGenericServices )
        , ( 42, Protobuf.Encode.bool value.phpGenericServices )
        , ( 23, Protobuf.Encode.bool value.deprecated )
        , ( 31, Protobuf.Encode.bool value.ccEnableArenas )
        , ( 36, Protobuf.Encode.string value.objcClassPrefix )
        , ( 37, Protobuf.Encode.string value.csharpNamespace )
        , ( 39, Protobuf.Encode.string value.swiftPrefix )
        , ( 40, Protobuf.Encode.string value.phpClassPrefix )
        , ( 41, Protobuf.Encode.string value.phpNamespace )
        , ( 44, Protobuf.Encode.string value.phpMetadataNamespace )
        , ( 45, Protobuf.Encode.string value.rubyPackage )
        , ( 999, Protobuf.Encode.list encodeProto__Google__Protobuf__UninterpretedOption value.uninterpretedOption )
        ]


{-| `Proto__Google__Protobuf__FileOptions` message


-}
type alias Proto__Google__Protobuf__FileOptions =
    { javaPackage : String
    , javaOuterClassname : String
    , javaMultipleFiles : Bool
    , javaGenerateEqualsAndHash : Bool
    , javaStringCheckUtf8 : Bool
    , optimizeFor : Proto__Google__Protobuf__FileOptions__OptimizeMode
    , goPackage : String
    , ccGenericServices : Bool
    , javaGenericServices : Bool
    , pyGenericServices : Bool
    , phpGenericServices : Bool
    , deprecated : Bool
    , ccEnableArenas : Bool
    , objcClassPrefix : String
    , csharpNamespace : String
    , swiftPrefix : String
    , phpClassPrefix : String
    , phpNamespace : String
    , phpMetadataNamespace : String
    , rubyPackage : String
    , uninterpretedOption : List Proto__Google__Protobuf__UninterpretedOption
    }


{-| The field numbers for the fields of `Proto__Google__Protobuf__MethodDescriptorProto`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersProto__Google__Protobuf__MethodDescriptorProto :
    { name : Int, inputType : Int, outputType : Int, options : Int, clientStreaming : Int, serverStreaming : Int }
fieldNumbersProto__Google__Protobuf__MethodDescriptorProto =
    { name = 1, inputType = 2, outputType = 3, options = 4, clientStreaming = 5, serverStreaming = 6 }


{-| Default for Proto__Google__Protobuf__MethodDescriptorProto. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Google__Protobuf__MethodDescriptorProto : Proto__Google__Protobuf__MethodDescriptorProto
defaultProto__Google__Protobuf__MethodDescriptorProto =
    { name = "", inputType = "", outputType = "", options = Nothing, clientStreaming = False, serverStreaming = False }


{-| Declares how to decode a `Proto__Google__Protobuf__MethodDescriptorProto` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Google__Protobuf__MethodDescriptorProto :
    Protobuf.Decode.Decoder Proto__Google__Protobuf__MethodDescriptorProto
decodeProto__Google__Protobuf__MethodDescriptorProto =
    Protobuf.Decode.message
        defaultProto__Google__Protobuf__MethodDescriptorProto
        [ Protobuf.Decode.optional 1 Protobuf.Decode.string (\a r -> { r | name = a })
        , Protobuf.Decode.optional 2 Protobuf.Decode.string (\a r -> { r | inputType = a })
        , Protobuf.Decode.optional 3 Protobuf.Decode.string (\a r -> { r | outputType = a })
        , Protobuf.Decode.optional
            4
            (Protobuf.Decode.map Just decodeProto__Google__Protobuf__MethodOptions)
            (\a r -> { r | options = a })
        , Protobuf.Decode.optional 5 Protobuf.Decode.bool (\a r -> { r | clientStreaming = a })
        , Protobuf.Decode.optional 6 Protobuf.Decode.bool (\a r -> { r | serverStreaming = a })
        ]


{-| Declares how to encode a `Proto__Google__Protobuf__MethodDescriptorProto` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Google__Protobuf__MethodDescriptorProto :
    Proto__Google__Protobuf__MethodDescriptorProto -> Protobuf.Encode.Encoder
encodeProto__Google__Protobuf__MethodDescriptorProto value =
    Protobuf.Encode.message
        [ ( 1, Protobuf.Encode.string value.name )
        , ( 2, Protobuf.Encode.string value.inputType )
        , ( 3, Protobuf.Encode.string value.outputType )
        , ( 4
          , (Maybe.map encodeProto__Google__Protobuf__MethodOptions >> Maybe.withDefault Protobuf.Encode.none)
                value.options
          )
        , ( 5, Protobuf.Encode.bool value.clientStreaming )
        , ( 6, Protobuf.Encode.bool value.serverStreaming )
        ]


{-| `Proto__Google__Protobuf__MethodDescriptorProto` message


-}
type alias Proto__Google__Protobuf__MethodDescriptorProto =
    { name : String
    , inputType : String
    , outputType : String
    , options : Maybe Proto__Google__Protobuf__MethodOptions
    , clientStreaming : Bool
    , serverStreaming : Bool
    }


{-| The field numbers for the fields of `Proto__Google__Protobuf__ServiceDescriptorProto`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersProto__Google__Protobuf__ServiceDescriptorProto : { name : Int, method : Int, options : Int }
fieldNumbersProto__Google__Protobuf__ServiceDescriptorProto =
    { name = 1, method = 2, options = 3 }


{-| Default for Proto__Google__Protobuf__ServiceDescriptorProto. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Google__Protobuf__ServiceDescriptorProto : Proto__Google__Protobuf__ServiceDescriptorProto
defaultProto__Google__Protobuf__ServiceDescriptorProto =
    { name = "", method = [], options = Nothing }


{-| Declares how to decode a `Proto__Google__Protobuf__ServiceDescriptorProto` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Google__Protobuf__ServiceDescriptorProto :
    Protobuf.Decode.Decoder Proto__Google__Protobuf__ServiceDescriptorProto
decodeProto__Google__Protobuf__ServiceDescriptorProto =
    Protobuf.Decode.message
        defaultProto__Google__Protobuf__ServiceDescriptorProto
        [ Protobuf.Decode.optional 1 Protobuf.Decode.string (\a r -> { r | name = a })
        , Protobuf.Decode.repeated
            2
            decodeProto__Google__Protobuf__MethodDescriptorProto
            .method
            (\a r -> { r | method = a })
        , Protobuf.Decode.optional
            3
            (Protobuf.Decode.map Just decodeProto__Google__Protobuf__ServiceOptions)
            (\a r -> { r | options = a })
        ]


{-| Declares how to encode a `Proto__Google__Protobuf__ServiceDescriptorProto` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Google__Protobuf__ServiceDescriptorProto :
    Proto__Google__Protobuf__ServiceDescriptorProto -> Protobuf.Encode.Encoder
encodeProto__Google__Protobuf__ServiceDescriptorProto value =
    Protobuf.Encode.message
        [ ( 1, Protobuf.Encode.string value.name )
        , ( 2, Protobuf.Encode.list encodeProto__Google__Protobuf__MethodDescriptorProto value.method )
        , ( 3
          , (Maybe.map encodeProto__Google__Protobuf__ServiceOptions >> Maybe.withDefault Protobuf.Encode.none)
                value.options
          )
        ]


{-| `Proto__Google__Protobuf__ServiceDescriptorProto` message


-}
type alias Proto__Google__Protobuf__ServiceDescriptorProto =
    { name : String
    , method : List Proto__Google__Protobuf__MethodDescriptorProto
    , options : Maybe Proto__Google__Protobuf__ServiceOptions
    }


{-| The field numbers for the fields of `Proto__Google__Protobuf__EnumValueDescriptorProto`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersProto__Google__Protobuf__EnumValueDescriptorProto : { name : Int, number : Int, options : Int }
fieldNumbersProto__Google__Protobuf__EnumValueDescriptorProto =
    { name = 1, number = 2, options = 3 }


{-| Default for Proto__Google__Protobuf__EnumValueDescriptorProto. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Google__Protobuf__EnumValueDescriptorProto : Proto__Google__Protobuf__EnumValueDescriptorProto
defaultProto__Google__Protobuf__EnumValueDescriptorProto =
    { name = "", number = 0, options = Nothing }


{-| Declares how to decode a `Proto__Google__Protobuf__EnumValueDescriptorProto` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Google__Protobuf__EnumValueDescriptorProto :
    Protobuf.Decode.Decoder Proto__Google__Protobuf__EnumValueDescriptorProto
decodeProto__Google__Protobuf__EnumValueDescriptorProto =
    Protobuf.Decode.message
        defaultProto__Google__Protobuf__EnumValueDescriptorProto
        [ Protobuf.Decode.optional 1 Protobuf.Decode.string (\a r -> { r | name = a })
        , Protobuf.Decode.optional 2 Protobuf.Decode.int32 (\a r -> { r | number = a })
        , Protobuf.Decode.optional
            3
            (Protobuf.Decode.map Just decodeProto__Google__Protobuf__EnumValueOptions)
            (\a r -> { r | options = a })
        ]


{-| Declares how to encode a `Proto__Google__Protobuf__EnumValueDescriptorProto` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Google__Protobuf__EnumValueDescriptorProto :
    Proto__Google__Protobuf__EnumValueDescriptorProto -> Protobuf.Encode.Encoder
encodeProto__Google__Protobuf__EnumValueDescriptorProto value =
    Protobuf.Encode.message
        [ ( 1, Protobuf.Encode.string value.name )
        , ( 2, Protobuf.Encode.int32 value.number )
        , ( 3
          , (Maybe.map encodeProto__Google__Protobuf__EnumValueOptions >> Maybe.withDefault Protobuf.Encode.none)
                value.options
          )
        ]


{-| `Proto__Google__Protobuf__EnumValueDescriptorProto` message


-}
type alias Proto__Google__Protobuf__EnumValueDescriptorProto =
    { name : String, number : Int, options : Maybe Proto__Google__Protobuf__EnumValueOptions }


{-| The field numbers for the fields of `Proto__Google__Protobuf__EnumDescriptorProto`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersProto__Google__Protobuf__EnumDescriptorProto :
    { name : Int, value : Int, options : Int, reservedRange : Int, reservedName : Int }
fieldNumbersProto__Google__Protobuf__EnumDescriptorProto =
    { name = 1, value = 2, options = 3, reservedRange = 4, reservedName = 5 }


{-| Default for Proto__Google__Protobuf__EnumDescriptorProto. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Google__Protobuf__EnumDescriptorProto : Proto__Google__Protobuf__EnumDescriptorProto
defaultProto__Google__Protobuf__EnumDescriptorProto =
    { name = "", value = [], options = Nothing, reservedRange = [], reservedName = [] }


{-| Declares how to decode a `Proto__Google__Protobuf__EnumDescriptorProto` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Google__Protobuf__EnumDescriptorProto :
    Protobuf.Decode.Decoder Proto__Google__Protobuf__EnumDescriptorProto
decodeProto__Google__Protobuf__EnumDescriptorProto =
    Protobuf.Decode.message
        defaultProto__Google__Protobuf__EnumDescriptorProto
        [ Protobuf.Decode.optional 1 Protobuf.Decode.string (\a r -> { r | name = a })
        , Protobuf.Decode.repeated
            2
            decodeProto__Google__Protobuf__EnumValueDescriptorProto
            .value
            (\a r -> { r | value = a })
        , Protobuf.Decode.optional
            3
            (Protobuf.Decode.map Just decodeProto__Google__Protobuf__EnumOptions)
            (\a r -> { r | options = a })
        , Protobuf.Decode.repeated
            4
            decodeProto__Google__Protobuf__EnumDescriptorProto__EnumReservedRange
            .reservedRange
            (\a r -> { r | reservedRange = a })
        , Protobuf.Decode.repeated 5 Protobuf.Decode.string .reservedName (\a r -> { r | reservedName = a })
        ]


{-| Declares how to encode a `Proto__Google__Protobuf__EnumDescriptorProto` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Google__Protobuf__EnumDescriptorProto :
    Proto__Google__Protobuf__EnumDescriptorProto -> Protobuf.Encode.Encoder
encodeProto__Google__Protobuf__EnumDescriptorProto value =
    Protobuf.Encode.message
        [ ( 1, Protobuf.Encode.string value.name )
        , ( 2, Protobuf.Encode.list encodeProto__Google__Protobuf__EnumValueDescriptorProto value.value )
        , ( 3
          , (Maybe.map encodeProto__Google__Protobuf__EnumOptions >> Maybe.withDefault Protobuf.Encode.none)
                value.options
          )
        , ( 4
          , Protobuf.Encode.list encodeProto__Google__Protobuf__EnumDescriptorProto__EnumReservedRange
                value.reservedRange
          )
        , ( 5, Protobuf.Encode.list Protobuf.Encode.string value.reservedName )
        ]


{-| `Proto__Google__Protobuf__EnumDescriptorProto` message


-}
type alias Proto__Google__Protobuf__EnumDescriptorProto =
    { name : String
    , value : List Proto__Google__Protobuf__EnumValueDescriptorProto
    , options : Maybe Proto__Google__Protobuf__EnumOptions
    , reservedRange : List Proto__Google__Protobuf__EnumDescriptorProto__EnumReservedRange
    , reservedName : List String
    }


{-| The field numbers for the fields of `Proto__Google__Protobuf__OneofDescriptorProto`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersProto__Google__Protobuf__OneofDescriptorProto : { name : Int, options : Int }
fieldNumbersProto__Google__Protobuf__OneofDescriptorProto =
    { name = 1, options = 2 }


{-| Default for Proto__Google__Protobuf__OneofDescriptorProto. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Google__Protobuf__OneofDescriptorProto : Proto__Google__Protobuf__OneofDescriptorProto
defaultProto__Google__Protobuf__OneofDescriptorProto =
    { name = "", options = Nothing }


{-| Declares how to decode a `Proto__Google__Protobuf__OneofDescriptorProto` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Google__Protobuf__OneofDescriptorProto :
    Protobuf.Decode.Decoder Proto__Google__Protobuf__OneofDescriptorProto
decodeProto__Google__Protobuf__OneofDescriptorProto =
    Protobuf.Decode.message
        defaultProto__Google__Protobuf__OneofDescriptorProto
        [ Protobuf.Decode.optional 1 Protobuf.Decode.string (\a r -> { r | name = a })
        , Protobuf.Decode.optional
            2
            (Protobuf.Decode.map Just decodeProto__Google__Protobuf__OneofOptions)
            (\a r -> { r | options = a })
        ]


{-| Declares how to encode a `Proto__Google__Protobuf__OneofDescriptorProto` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Google__Protobuf__OneofDescriptorProto :
    Proto__Google__Protobuf__OneofDescriptorProto -> Protobuf.Encode.Encoder
encodeProto__Google__Protobuf__OneofDescriptorProto value =
    Protobuf.Encode.message
        [ ( 1, Protobuf.Encode.string value.name )
        , ( 2
          , (Maybe.map encodeProto__Google__Protobuf__OneofOptions >> Maybe.withDefault Protobuf.Encode.none)
                value.options
          )
        ]


{-| `Proto__Google__Protobuf__OneofDescriptorProto` message


-}
type alias Proto__Google__Protobuf__OneofDescriptorProto =
    { name : String, options : Maybe Proto__Google__Protobuf__OneofOptions }


{-| The field numbers for the fields of `Proto__Google__Protobuf__FieldDescriptorProto`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersProto__Google__Protobuf__FieldDescriptorProto :
    { name : Int
    , number : Int
    , label : Int
    , type_ : Int
    , typeName : Int
    , extendee : Int
    , defaultValue : Int
    , oneofIndex : Int
    , jsonName : Int
    , options : Int
    , proto3Optional : Int
    }
fieldNumbersProto__Google__Protobuf__FieldDescriptorProto =
    { name = 1
    , number = 3
    , label = 4
    , type_ = 5
    , typeName = 6
    , extendee = 2
    , defaultValue = 7
    , oneofIndex = 9
    , jsonName = 10
    , options = 8
    , proto3Optional = 17
    }


{-| Default for Proto__Google__Protobuf__FieldDescriptorProto. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Google__Protobuf__FieldDescriptorProto : Proto__Google__Protobuf__FieldDescriptorProto
defaultProto__Google__Protobuf__FieldDescriptorProto =
    { name = ""
    , number = 0
    , label = defaultProto__Google__Protobuf__FieldDescriptorProto__Label
    , type_ = defaultProto__Google__Protobuf__FieldDescriptorProto__Type
    , typeName = ""
    , extendee = ""
    , defaultValue = ""
    , oneofIndex = -1
    , jsonName = ""
    , options = Nothing
    , proto3Optional = False
    }


{-| Declares how to decode a `Proto__Google__Protobuf__FieldDescriptorProto` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Google__Protobuf__FieldDescriptorProto :
    Protobuf.Decode.Decoder Proto__Google__Protobuf__FieldDescriptorProto
decodeProto__Google__Protobuf__FieldDescriptorProto =
    Protobuf.Decode.message
        defaultProto__Google__Protobuf__FieldDescriptorProto
        [ Protobuf.Decode.optional 1 Protobuf.Decode.string (\a r -> { r | name = a })
        , Protobuf.Decode.optional 3 Protobuf.Decode.int32 (\a r -> { r | number = a })
        , Protobuf.Decode.optional
            4
            decodeProto__Google__Protobuf__FieldDescriptorProto__Label
            (\a r -> { r | label = a })
        , Protobuf.Decode.optional
            5
            decodeProto__Google__Protobuf__FieldDescriptorProto__Type
            (\a r -> { r | type_ = a })
        , Protobuf.Decode.optional 6 Protobuf.Decode.string (\a r -> { r | typeName = a })
        , Protobuf.Decode.optional 2 Protobuf.Decode.string (\a r -> { r | extendee = a })
        , Protobuf.Decode.optional 7 Protobuf.Decode.string (\a r -> { r | defaultValue = a })
        , Protobuf.Decode.optional 9 Protobuf.Decode.int32 (\a r -> { r | oneofIndex = a })
        , Protobuf.Decode.optional 10 Protobuf.Decode.string (\a r -> { r | jsonName = a })
        , Protobuf.Decode.optional
            8
            (Protobuf.Decode.map Just decodeProto__Google__Protobuf__FieldOptions)
            (\a r -> { r | options = a })
        , Protobuf.Decode.optional 17 Protobuf.Decode.bool (\a r -> { r | proto3Optional = a })
        ]


{-| Declares how to encode a `Proto__Google__Protobuf__FieldDescriptorProto` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Google__Protobuf__FieldDescriptorProto :
    Proto__Google__Protobuf__FieldDescriptorProto -> Protobuf.Encode.Encoder
encodeProto__Google__Protobuf__FieldDescriptorProto value =
    Protobuf.Encode.message
        [ ( 1, Protobuf.Encode.string value.name )
        , ( 3, Protobuf.Encode.int32 value.number )
        , ( 4, encodeProto__Google__Protobuf__FieldDescriptorProto__Label value.label )
        , ( 5, encodeProto__Google__Protobuf__FieldDescriptorProto__Type value.type_ )
        , ( 6, Protobuf.Encode.string value.typeName )
        , ( 2, Protobuf.Encode.string value.extendee )
        , ( 7, Protobuf.Encode.string value.defaultValue )
        , ( 9, Protobuf.Encode.int32 value.oneofIndex )
        , ( 10, Protobuf.Encode.string value.jsonName )
        , ( 8
          , (Maybe.map encodeProto__Google__Protobuf__FieldOptions >> Maybe.withDefault Protobuf.Encode.none)
                value.options
          )
        , ( 17, Protobuf.Encode.bool value.proto3Optional )
        ]


{-| `Proto__Google__Protobuf__FieldDescriptorProto` message


-}
type alias Proto__Google__Protobuf__FieldDescriptorProto =
    { name : String
    , number : Int
    , label : Proto__Google__Protobuf__FieldDescriptorProto__Label
    , type_ : Proto__Google__Protobuf__FieldDescriptorProto__Type
    , typeName : String
    , extendee : String
    , defaultValue : String
    , oneofIndex : Int
    , jsonName : String
    , options : Maybe Proto__Google__Protobuf__FieldOptions
    , proto3Optional : Bool
    }


{-| The field numbers for the fields of `Proto__Google__Protobuf__ExtensionRangeOptions`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersProto__Google__Protobuf__ExtensionRangeOptions : { uninterpretedOption : Int }
fieldNumbersProto__Google__Protobuf__ExtensionRangeOptions =
    { uninterpretedOption = 999 }


{-| Default for Proto__Google__Protobuf__ExtensionRangeOptions. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Google__Protobuf__ExtensionRangeOptions : Proto__Google__Protobuf__ExtensionRangeOptions
defaultProto__Google__Protobuf__ExtensionRangeOptions =
    { uninterpretedOption = [] }


{-| Declares how to decode a `Proto__Google__Protobuf__ExtensionRangeOptions` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Google__Protobuf__ExtensionRangeOptions :
    Protobuf.Decode.Decoder Proto__Google__Protobuf__ExtensionRangeOptions
decodeProto__Google__Protobuf__ExtensionRangeOptions =
    Protobuf.Decode.message
        defaultProto__Google__Protobuf__ExtensionRangeOptions
        [ Protobuf.Decode.repeated
            999
            decodeProto__Google__Protobuf__UninterpretedOption
            .uninterpretedOption
            (\a r -> { r | uninterpretedOption = a })
        ]


{-| Declares how to encode a `Proto__Google__Protobuf__ExtensionRangeOptions` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Google__Protobuf__ExtensionRangeOptions :
    Proto__Google__Protobuf__ExtensionRangeOptions -> Protobuf.Encode.Encoder
encodeProto__Google__Protobuf__ExtensionRangeOptions value =
    Protobuf.Encode.message
        [ ( 999, Protobuf.Encode.list encodeProto__Google__Protobuf__UninterpretedOption value.uninterpretedOption ) ]


{-| `Proto__Google__Protobuf__ExtensionRangeOptions` message


-}
type alias Proto__Google__Protobuf__ExtensionRangeOptions =
    { uninterpretedOption : List Proto__Google__Protobuf__UninterpretedOption }


{-| Unwrap a `DescriptorProto` from its wrapper `DescriptorProto_.`


-}
unwrapProto__Google__Protobuf__DescriptorProto :
    Proto__Google__Protobuf__DescriptorProto_ -> Proto__Google__Protobuf__DescriptorProto
unwrapProto__Google__Protobuf__DescriptorProto (Proto__Google__Protobuf__DescriptorProto_ wrapped) =
    wrapped


{-| Type wrapper for alias type `DescriptorProto` to avoid unlimited recursion.


For a more in-depth explanation why we need this, read this: https://github.com/elm/compiler/blob/master/hints/recursive-alias.md.


-}
type Proto__Google__Protobuf__DescriptorProto_
    = Proto__Google__Protobuf__DescriptorProto_ Proto__Google__Protobuf__DescriptorProto


{-| The field numbers for the fields of `Proto__Google__Protobuf__DescriptorProto`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersProto__Google__Protobuf__DescriptorProto :
    { name : Int
    , field : Int
    , extension : Int
    , nestedType : Int
    , enumType : Int
    , extensionRange : Int
    , oneofDecl : Int
    , options : Int
    , reservedRange : Int
    , reservedName : Int
    }
fieldNumbersProto__Google__Protobuf__DescriptorProto =
    { name = 1
    , field = 2
    , extension = 6
    , nestedType = 3
    , enumType = 4
    , extensionRange = 5
    , oneofDecl = 8
    , options = 7
    , reservedRange = 9
    , reservedName = 10
    }


{-| Default for Proto__Google__Protobuf__DescriptorProto. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Google__Protobuf__DescriptorProto : Proto__Google__Protobuf__DescriptorProto
defaultProto__Google__Protobuf__DescriptorProto =
    { name = ""
    , field = []
    , extension = []
    , nestedType = []
    , enumType = []
    , extensionRange = []
    , oneofDecl = []
    , options = Nothing
    , reservedRange = []
    , reservedName = []
    }


{-| Declares how to decode a `Proto__Google__Protobuf__DescriptorProto` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Google__Protobuf__DescriptorProto : Protobuf.Decode.Decoder Proto__Google__Protobuf__DescriptorProto
decodeProto__Google__Protobuf__DescriptorProto =
    Protobuf.Decode.message
        defaultProto__Google__Protobuf__DescriptorProto
        [ Protobuf.Decode.optional 1 Protobuf.Decode.string (\a r -> { r | name = a })
        , Protobuf.Decode.repeated
            2
            decodeProto__Google__Protobuf__FieldDescriptorProto
            .field
            (\a r -> { r | field = a })
        , Protobuf.Decode.repeated
            6
            decodeProto__Google__Protobuf__FieldDescriptorProto
            .extension
            (\a r -> { r | extension = a })
        , Protobuf.Decode.repeated
            3
            (Protobuf.Decode.map Proto__Google__Protobuf__DescriptorProto_ <|
                 Protobuf.Decode.lazy <| \_ -> decodeProto__Google__Protobuf__DescriptorProto
            )
            .nestedType
            (\a r -> { r | nestedType = a })
        , Protobuf.Decode.repeated
            4
            decodeProto__Google__Protobuf__EnumDescriptorProto
            .enumType
            (\a r -> { r | enumType = a })
        , Protobuf.Decode.repeated
            5
            decodeProto__Google__Protobuf__DescriptorProto__ExtensionRange
            .extensionRange
            (\a r -> { r | extensionRange = a })
        , Protobuf.Decode.repeated
            8
            decodeProto__Google__Protobuf__OneofDescriptorProto
            .oneofDecl
            (\a r -> { r | oneofDecl = a })
        , Protobuf.Decode.optional
            7
            (Protobuf.Decode.map Just decodeProto__Google__Protobuf__MessageOptions)
            (\a r -> { r | options = a })
        , Protobuf.Decode.repeated
            9
            decodeProto__Google__Protobuf__DescriptorProto__ReservedRange
            .reservedRange
            (\a r -> { r | reservedRange = a })
        , Protobuf.Decode.repeated 10 Protobuf.Decode.string .reservedName (\a r -> { r | reservedName = a })
        ]


{-| Declares how to encode a `Proto__Google__Protobuf__DescriptorProto` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Google__Protobuf__DescriptorProto : Proto__Google__Protobuf__DescriptorProto -> Protobuf.Encode.Encoder
encodeProto__Google__Protobuf__DescriptorProto value =
    Protobuf.Encode.message
        [ ( 1, Protobuf.Encode.string value.name )
        , ( 2, Protobuf.Encode.list encodeProto__Google__Protobuf__FieldDescriptorProto value.field )
        , ( 6, Protobuf.Encode.list encodeProto__Google__Protobuf__FieldDescriptorProto value.extension )
        , ( 3
          , Protobuf.Encode.list
                (unwrapProto__Google__Protobuf__DescriptorProto >> encodeProto__Google__Protobuf__DescriptorProto)
                value.nestedType
          )
        , ( 4, Protobuf.Encode.list encodeProto__Google__Protobuf__EnumDescriptorProto value.enumType )
        , ( 5
          , Protobuf.Encode.list encodeProto__Google__Protobuf__DescriptorProto__ExtensionRange value.extensionRange
          )
        , ( 8, Protobuf.Encode.list encodeProto__Google__Protobuf__OneofDescriptorProto value.oneofDecl )
        , ( 7
          , (Maybe.map encodeProto__Google__Protobuf__MessageOptions >> Maybe.withDefault Protobuf.Encode.none)
                value.options
          )
        , ( 9, Protobuf.Encode.list encodeProto__Google__Protobuf__DescriptorProto__ReservedRange value.reservedRange )
        , ( 10, Protobuf.Encode.list Protobuf.Encode.string value.reservedName )
        ]


{-| `Proto__Google__Protobuf__DescriptorProto` message


-}
type alias Proto__Google__Protobuf__DescriptorProto =
    { name : String
    , field : List Proto__Google__Protobuf__FieldDescriptorProto
    , extension : List Proto__Google__Protobuf__FieldDescriptorProto
    , nestedType : List Proto__Google__Protobuf__DescriptorProto_
    , enumType : List Proto__Google__Protobuf__EnumDescriptorProto
    , extensionRange : List Proto__Google__Protobuf__DescriptorProto__ExtensionRange
    , oneofDecl : List Proto__Google__Protobuf__OneofDescriptorProto
    , options : Maybe Proto__Google__Protobuf__MessageOptions
    , reservedRange : List Proto__Google__Protobuf__DescriptorProto__ReservedRange
    , reservedName : List String
    }


{-| The field numbers for the fields of `Proto__Google__Protobuf__FileDescriptorProto`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersProto__Google__Protobuf__FileDescriptorProto :
    { name : Int
    , package : Int
    , dependency : Int
    , publicDependency : Int
    , weakDependency : Int
    , messageType : Int
    , enumType : Int
    , service : Int
    , extension : Int
    , options : Int
    , sourceCodeInfo : Int
    , syntax : Int
    }
fieldNumbersProto__Google__Protobuf__FileDescriptorProto =
    { name = 1
    , package = 2
    , dependency = 3
    , publicDependency = 10
    , weakDependency = 11
    , messageType = 4
    , enumType = 5
    , service = 6
    , extension = 7
    , options = 8
    , sourceCodeInfo = 9
    , syntax = 12
    }


{-| Default for Proto__Google__Protobuf__FileDescriptorProto. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Google__Protobuf__FileDescriptorProto : Proto__Google__Protobuf__FileDescriptorProto
defaultProto__Google__Protobuf__FileDescriptorProto =
    { name = ""
    , package = ""
    , dependency = []
    , publicDependency = []
    , weakDependency = []
    , messageType = []
    , enumType = []
    , service = []
    , extension = []
    , options = Nothing
    , sourceCodeInfo = Nothing
    , syntax = ""
    }


{-| Declares how to decode a `Proto__Google__Protobuf__FileDescriptorProto` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Google__Protobuf__FileDescriptorProto :
    Protobuf.Decode.Decoder Proto__Google__Protobuf__FileDescriptorProto
decodeProto__Google__Protobuf__FileDescriptorProto =
    Protobuf.Decode.message
        defaultProto__Google__Protobuf__FileDescriptorProto
        [ Protobuf.Decode.optional 1 Protobuf.Decode.string (\a r -> { r | name = a })
        , Protobuf.Decode.optional 2 Protobuf.Decode.string (\a r -> { r | package = a })
        , Protobuf.Decode.repeated 3 Protobuf.Decode.string .dependency (\a r -> { r | dependency = a })
        , Protobuf.Decode.repeated 10 Protobuf.Decode.int32 .publicDependency (\a r -> { r | publicDependency = a })
        , Protobuf.Decode.repeated 11 Protobuf.Decode.int32 .weakDependency (\a r -> { r | weakDependency = a })
        , Protobuf.Decode.repeated
            4
            decodeProto__Google__Protobuf__DescriptorProto
            .messageType
            (\a r -> { r | messageType = a })
        , Protobuf.Decode.repeated
            5
            decodeProto__Google__Protobuf__EnumDescriptorProto
            .enumType
            (\a r -> { r | enumType = a })
        , Protobuf.Decode.repeated
            6
            decodeProto__Google__Protobuf__ServiceDescriptorProto
            .service
            (\a r -> { r | service = a })
        , Protobuf.Decode.repeated
            7
            decodeProto__Google__Protobuf__FieldDescriptorProto
            .extension
            (\a r -> { r | extension = a })
        , Protobuf.Decode.optional
            8
            (Protobuf.Decode.map Just decodeProto__Google__Protobuf__FileOptions)
            (\a r -> { r | options = a })
        , Protobuf.Decode.optional
            9
            (Protobuf.Decode.map Just decodeProto__Google__Protobuf__SourceCodeInfo)
            (\a r -> { r | sourceCodeInfo = a })
        , Protobuf.Decode.optional 12 Protobuf.Decode.string (\a r -> { r | syntax = a })
        ]


{-| Declares how to encode a `Proto__Google__Protobuf__FileDescriptorProto` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Google__Protobuf__FileDescriptorProto :
    Proto__Google__Protobuf__FileDescriptorProto -> Protobuf.Encode.Encoder
encodeProto__Google__Protobuf__FileDescriptorProto value =
    Protobuf.Encode.message
        [ ( 1, Protobuf.Encode.string value.name )
        , ( 2, Protobuf.Encode.string value.package )
        , ( 3, Protobuf.Encode.list Protobuf.Encode.string value.dependency )
        , ( 10, Protobuf.Encode.list Protobuf.Encode.int32 value.publicDependency )
        , ( 11, Protobuf.Encode.list Protobuf.Encode.int32 value.weakDependency )
        , ( 4, Protobuf.Encode.list encodeProto__Google__Protobuf__DescriptorProto value.messageType )
        , ( 5, Protobuf.Encode.list encodeProto__Google__Protobuf__EnumDescriptorProto value.enumType )
        , ( 6, Protobuf.Encode.list encodeProto__Google__Protobuf__ServiceDescriptorProto value.service )
        , ( 7, Protobuf.Encode.list encodeProto__Google__Protobuf__FieldDescriptorProto value.extension )
        , ( 8
          , (Maybe.map encodeProto__Google__Protobuf__FileOptions >> Maybe.withDefault Protobuf.Encode.none)
                value.options
          )
        , ( 9
          , (Maybe.map encodeProto__Google__Protobuf__SourceCodeInfo >> Maybe.withDefault Protobuf.Encode.none)
                value.sourceCodeInfo
          )
        , ( 12, Protobuf.Encode.string value.syntax )
        ]


{-| `Proto__Google__Protobuf__FileDescriptorProto` message


-}
type alias Proto__Google__Protobuf__FileDescriptorProto =
    { name : String
    , package : String
    , dependency : List String
    , publicDependency : List Int
    , weakDependency : List Int
    , messageType : List Proto__Google__Protobuf__DescriptorProto
    , enumType : List Proto__Google__Protobuf__EnumDescriptorProto
    , service : List Proto__Google__Protobuf__ServiceDescriptorProto
    , extension : List Proto__Google__Protobuf__FieldDescriptorProto
    , options : Maybe Proto__Google__Protobuf__FileOptions
    , sourceCodeInfo : Maybe Proto__Google__Protobuf__SourceCodeInfo
    , syntax : String
    }


{-| The field numbers for the fields of `Proto__Google__Protobuf__FileDescriptorSet`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersProto__Google__Protobuf__FileDescriptorSet : { file : Int }
fieldNumbersProto__Google__Protobuf__FileDescriptorSet =
    { file = 1 }


{-| Default for Proto__Google__Protobuf__FileDescriptorSet. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Google__Protobuf__FileDescriptorSet : Proto__Google__Protobuf__FileDescriptorSet
defaultProto__Google__Protobuf__FileDescriptorSet =
    { file = [] }


{-| Declares how to decode a `Proto__Google__Protobuf__FileDescriptorSet` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Google__Protobuf__FileDescriptorSet : Protobuf.Decode.Decoder Proto__Google__Protobuf__FileDescriptorSet
decodeProto__Google__Protobuf__FileDescriptorSet =
    Protobuf.Decode.message
        defaultProto__Google__Protobuf__FileDescriptorSet
        [ Protobuf.Decode.repeated 1 decodeProto__Google__Protobuf__FileDescriptorProto .file (\a r -> { r | file = a })
        ]


{-| Declares how to encode a `Proto__Google__Protobuf__FileDescriptorSet` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Google__Protobuf__FileDescriptorSet : Proto__Google__Protobuf__FileDescriptorSet -> Protobuf.Encode.Encoder
encodeProto__Google__Protobuf__FileDescriptorSet value =
    Protobuf.Encode.message
        [ ( 1, Protobuf.Encode.list encodeProto__Google__Protobuf__FileDescriptorProto value.file ) ]


{-| `Proto__Google__Protobuf__FileDescriptorSet` message


-}
type alias Proto__Google__Protobuf__FileDescriptorSet =
    { file : List Proto__Google__Protobuf__FileDescriptorProto }


{-| Default for Proto__Google__Protobuf__MethodOptions__IdempotencyLevel. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Google__Protobuf__MethodOptions__IdempotencyLevel :
    Proto__Google__Protobuf__MethodOptions__IdempotencyLevel
defaultProto__Google__Protobuf__MethodOptions__IdempotencyLevel =
    Proto__Google__Protobuf__MethodOptions__IDEMPOTENCYUNKNOWN


{-| Declares how to encode a `Proto__Google__Protobuf__MethodOptions__IdempotencyLevel` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Google__Protobuf__MethodOptions__IdempotencyLevel :
    Proto__Google__Protobuf__MethodOptions__IdempotencyLevel -> Protobuf.Encode.Encoder
encodeProto__Google__Protobuf__MethodOptions__IdempotencyLevel value =
    Protobuf.Encode.int32 <|
        case value of
            Proto__Google__Protobuf__MethodOptions__IDEMPOTENCYUNKNOWN ->
                0

            Proto__Google__Protobuf__MethodOptions__NOSIDEEFFECTS ->
                1

            Proto__Google__Protobuf__MethodOptions__IDEMPOTENT ->
                2


{-| Declares how to decode a `Proto__Google__Protobuf__MethodOptions__IdempotencyLevel` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Google__Protobuf__MethodOptions__IdempotencyLevel :
    Protobuf.Decode.Decoder Proto__Google__Protobuf__MethodOptions__IdempotencyLevel
decodeProto__Google__Protobuf__MethodOptions__IdempotencyLevel =
    Protobuf.Decode.int32
        |> Protobuf.Decode.map
            (\i ->
                case i of
                    0 ->
                        Proto__Google__Protobuf__MethodOptions__IDEMPOTENCYUNKNOWN

                    1 ->
                        Proto__Google__Protobuf__MethodOptions__NOSIDEEFFECTS

                    2 ->
                        Proto__Google__Protobuf__MethodOptions__IDEMPOTENT

                    _ ->
                        Proto__Google__Protobuf__MethodOptions__IDEMPOTENCYUNKNOWN
            )


{-| `Proto__Google__Protobuf__MethodOptions__IdempotencyLevel` enumeration


-}
type Proto__Google__Protobuf__MethodOptions__IdempotencyLevel
    = Proto__Google__Protobuf__MethodOptions__IDEMPOTENCYUNKNOWN
    | Proto__Google__Protobuf__MethodOptions__NOSIDEEFFECTS
    | Proto__Google__Protobuf__MethodOptions__IDEMPOTENT


{-| Default for Proto__Google__Protobuf__FileOptions__OptimizeMode. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Google__Protobuf__FileOptions__OptimizeMode : Proto__Google__Protobuf__FileOptions__OptimizeMode
defaultProto__Google__Protobuf__FileOptions__OptimizeMode =
    Proto__Google__Protobuf__FileOptions__SPEED


{-| Declares how to encode a `Proto__Google__Protobuf__FileOptions__OptimizeMode` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Google__Protobuf__FileOptions__OptimizeMode :
    Proto__Google__Protobuf__FileOptions__OptimizeMode -> Protobuf.Encode.Encoder
encodeProto__Google__Protobuf__FileOptions__OptimizeMode value =
    Protobuf.Encode.int32 <|
        case value of
            Proto__Google__Protobuf__FileOptions__SPEED ->
                1

            Proto__Google__Protobuf__FileOptions__CODESIZE ->
                2

            Proto__Google__Protobuf__FileOptions__LITERUNTIME ->
                3


{-| Declares how to decode a `Proto__Google__Protobuf__FileOptions__OptimizeMode` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Google__Protobuf__FileOptions__OptimizeMode :
    Protobuf.Decode.Decoder Proto__Google__Protobuf__FileOptions__OptimizeMode
decodeProto__Google__Protobuf__FileOptions__OptimizeMode =
    Protobuf.Decode.int32
        |> Protobuf.Decode.map
            (\i ->
                case i of
                    1 ->
                        Proto__Google__Protobuf__FileOptions__SPEED

                    2 ->
                        Proto__Google__Protobuf__FileOptions__CODESIZE

                    3 ->
                        Proto__Google__Protobuf__FileOptions__LITERUNTIME

                    _ ->
                        Proto__Google__Protobuf__FileOptions__SPEED
            )


{-| `Proto__Google__Protobuf__FileOptions__OptimizeMode` enumeration


-}
type Proto__Google__Protobuf__FileOptions__OptimizeMode
    = Proto__Google__Protobuf__FileOptions__SPEED
    | Proto__Google__Protobuf__FileOptions__CODESIZE
    | Proto__Google__Protobuf__FileOptions__LITERUNTIME


{-| Default for Proto__Google__Protobuf__FieldOptions__JSType. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Google__Protobuf__FieldOptions__JSType : Proto__Google__Protobuf__FieldOptions__JSType
defaultProto__Google__Protobuf__FieldOptions__JSType =
    Proto__Google__Protobuf__FieldOptions__JSNORMAL


{-| Declares how to encode a `Proto__Google__Protobuf__FieldOptions__JSType` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Google__Protobuf__FieldOptions__JSType :
    Proto__Google__Protobuf__FieldOptions__JSType -> Protobuf.Encode.Encoder
encodeProto__Google__Protobuf__FieldOptions__JSType value =
    Protobuf.Encode.int32 <|
        case value of
            Proto__Google__Protobuf__FieldOptions__JSNORMAL ->
                0

            Proto__Google__Protobuf__FieldOptions__JSSTRING ->
                1

            Proto__Google__Protobuf__FieldOptions__JSNUMBER ->
                2


{-| Declares how to decode a `Proto__Google__Protobuf__FieldOptions__JSType` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Google__Protobuf__FieldOptions__JSType :
    Protobuf.Decode.Decoder Proto__Google__Protobuf__FieldOptions__JSType
decodeProto__Google__Protobuf__FieldOptions__JSType =
    Protobuf.Decode.int32
        |> Protobuf.Decode.map
            (\i ->
                case i of
                    0 ->
                        Proto__Google__Protobuf__FieldOptions__JSNORMAL

                    1 ->
                        Proto__Google__Protobuf__FieldOptions__JSSTRING

                    2 ->
                        Proto__Google__Protobuf__FieldOptions__JSNUMBER

                    _ ->
                        Proto__Google__Protobuf__FieldOptions__JSNORMAL
            )


{-| `Proto__Google__Protobuf__FieldOptions__JSType` enumeration


-}
type Proto__Google__Protobuf__FieldOptions__JSType
    = Proto__Google__Protobuf__FieldOptions__JSNORMAL
    | Proto__Google__Protobuf__FieldOptions__JSSTRING
    | Proto__Google__Protobuf__FieldOptions__JSNUMBER


{-| Default for Proto__Google__Protobuf__FieldOptions__CType. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Google__Protobuf__FieldOptions__CType : Proto__Google__Protobuf__FieldOptions__CType
defaultProto__Google__Protobuf__FieldOptions__CType =
    Proto__Google__Protobuf__FieldOptions__STRING


{-| Declares how to encode a `Proto__Google__Protobuf__FieldOptions__CType` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Google__Protobuf__FieldOptions__CType :
    Proto__Google__Protobuf__FieldOptions__CType -> Protobuf.Encode.Encoder
encodeProto__Google__Protobuf__FieldOptions__CType value =
    Protobuf.Encode.int32 <|
        case value of
            Proto__Google__Protobuf__FieldOptions__STRING ->
                0

            Proto__Google__Protobuf__FieldOptions__CORD ->
                1

            Proto__Google__Protobuf__FieldOptions__STRINGPIECE ->
                2


{-| Declares how to decode a `Proto__Google__Protobuf__FieldOptions__CType` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Google__Protobuf__FieldOptions__CType :
    Protobuf.Decode.Decoder Proto__Google__Protobuf__FieldOptions__CType
decodeProto__Google__Protobuf__FieldOptions__CType =
    Protobuf.Decode.int32
        |> Protobuf.Decode.map
            (\i ->
                case i of
                    0 ->
                        Proto__Google__Protobuf__FieldOptions__STRING

                    1 ->
                        Proto__Google__Protobuf__FieldOptions__CORD

                    2 ->
                        Proto__Google__Protobuf__FieldOptions__STRINGPIECE

                    _ ->
                        Proto__Google__Protobuf__FieldOptions__STRING
            )


{-| `Proto__Google__Protobuf__FieldOptions__CType` enumeration


-}
type Proto__Google__Protobuf__FieldOptions__CType
    = Proto__Google__Protobuf__FieldOptions__STRING
    | Proto__Google__Protobuf__FieldOptions__CORD
    | Proto__Google__Protobuf__FieldOptions__STRINGPIECE


{-| Default for Proto__Google__Protobuf__FieldDescriptorProto__Label. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Google__Protobuf__FieldDescriptorProto__Label : Proto__Google__Protobuf__FieldDescriptorProto__Label
defaultProto__Google__Protobuf__FieldDescriptorProto__Label =
    Proto__Google__Protobuf__FieldDescriptorProto__LABELOPTIONAL


{-| Declares how to encode a `Proto__Google__Protobuf__FieldDescriptorProto__Label` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Google__Protobuf__FieldDescriptorProto__Label :
    Proto__Google__Protobuf__FieldDescriptorProto__Label -> Protobuf.Encode.Encoder
encodeProto__Google__Protobuf__FieldDescriptorProto__Label value =
    Protobuf.Encode.int32 <|
        case value of
            Proto__Google__Protobuf__FieldDescriptorProto__LABELOPTIONAL ->
                1

            Proto__Google__Protobuf__FieldDescriptorProto__LABELREQUIRED ->
                2

            Proto__Google__Protobuf__FieldDescriptorProto__LABELREPEATED ->
                3


{-| Declares how to decode a `Proto__Google__Protobuf__FieldDescriptorProto__Label` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Google__Protobuf__FieldDescriptorProto__Label :
    Protobuf.Decode.Decoder Proto__Google__Protobuf__FieldDescriptorProto__Label
decodeProto__Google__Protobuf__FieldDescriptorProto__Label =
    Protobuf.Decode.int32
        |> Protobuf.Decode.map
            (\i ->
                case i of
                    1 ->
                        Proto__Google__Protobuf__FieldDescriptorProto__LABELOPTIONAL

                    2 ->
                        Proto__Google__Protobuf__FieldDescriptorProto__LABELREQUIRED

                    3 ->
                        Proto__Google__Protobuf__FieldDescriptorProto__LABELREPEATED

                    _ ->
                        Proto__Google__Protobuf__FieldDescriptorProto__LABELOPTIONAL
            )


{-| `Proto__Google__Protobuf__FieldDescriptorProto__Label` enumeration


-}
type Proto__Google__Protobuf__FieldDescriptorProto__Label
    = Proto__Google__Protobuf__FieldDescriptorProto__LABELOPTIONAL
    | Proto__Google__Protobuf__FieldDescriptorProto__LABELREQUIRED
    | Proto__Google__Protobuf__FieldDescriptorProto__LABELREPEATED


{-| Default for Proto__Google__Protobuf__FieldDescriptorProto__Type. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Google__Protobuf__FieldDescriptorProto__Type : Proto__Google__Protobuf__FieldDescriptorProto__Type
defaultProto__Google__Protobuf__FieldDescriptorProto__Type =
    Proto__Google__Protobuf__FieldDescriptorProto__TYPEDOUBLE


{-| Declares how to encode a `Proto__Google__Protobuf__FieldDescriptorProto__Type` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Google__Protobuf__FieldDescriptorProto__Type :
    Proto__Google__Protobuf__FieldDescriptorProto__Type -> Protobuf.Encode.Encoder
encodeProto__Google__Protobuf__FieldDescriptorProto__Type value =
    Protobuf.Encode.int32 <|
        case value of
            Proto__Google__Protobuf__FieldDescriptorProto__TYPEDOUBLE ->
                1

            Proto__Google__Protobuf__FieldDescriptorProto__TYPEFLOAT ->
                2

            Proto__Google__Protobuf__FieldDescriptorProto__TYPEINT64 ->
                3

            Proto__Google__Protobuf__FieldDescriptorProto__TYPEUINT64 ->
                4

            Proto__Google__Protobuf__FieldDescriptorProto__TYPEINT32 ->
                5

            Proto__Google__Protobuf__FieldDescriptorProto__TYPEFIXED64 ->
                6

            Proto__Google__Protobuf__FieldDescriptorProto__TYPEFIXED32 ->
                7

            Proto__Google__Protobuf__FieldDescriptorProto__TYPEBOOL ->
                8

            Proto__Google__Protobuf__FieldDescriptorProto__TYPESTRING ->
                9

            Proto__Google__Protobuf__FieldDescriptorProto__TYPEGROUP ->
                10

            Proto__Google__Protobuf__FieldDescriptorProto__TYPEMESSAGE ->
                11

            Proto__Google__Protobuf__FieldDescriptorProto__TYPEBYTES ->
                12

            Proto__Google__Protobuf__FieldDescriptorProto__TYPEUINT32 ->
                13

            Proto__Google__Protobuf__FieldDescriptorProto__TYPEENUM ->
                14

            Proto__Google__Protobuf__FieldDescriptorProto__TYPESFIXED32 ->
                15

            Proto__Google__Protobuf__FieldDescriptorProto__TYPESFIXED64 ->
                16

            Proto__Google__Protobuf__FieldDescriptorProto__TYPESINT32 ->
                17

            Proto__Google__Protobuf__FieldDescriptorProto__TYPESINT64 ->
                18


{-| Declares how to decode a `Proto__Google__Protobuf__FieldDescriptorProto__Type` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Google__Protobuf__FieldDescriptorProto__Type :
    Protobuf.Decode.Decoder Proto__Google__Protobuf__FieldDescriptorProto__Type
decodeProto__Google__Protobuf__FieldDescriptorProto__Type =
    Protobuf.Decode.int32
        |> Protobuf.Decode.map
            (\i ->
                case i of
                    1 ->
                        Proto__Google__Protobuf__FieldDescriptorProto__TYPEDOUBLE

                    2 ->
                        Proto__Google__Protobuf__FieldDescriptorProto__TYPEFLOAT

                    3 ->
                        Proto__Google__Protobuf__FieldDescriptorProto__TYPEINT64

                    4 ->
                        Proto__Google__Protobuf__FieldDescriptorProto__TYPEUINT64

                    5 ->
                        Proto__Google__Protobuf__FieldDescriptorProto__TYPEINT32

                    6 ->
                        Proto__Google__Protobuf__FieldDescriptorProto__TYPEFIXED64

                    7 ->
                        Proto__Google__Protobuf__FieldDescriptorProto__TYPEFIXED32

                    8 ->
                        Proto__Google__Protobuf__FieldDescriptorProto__TYPEBOOL

                    9 ->
                        Proto__Google__Protobuf__FieldDescriptorProto__TYPESTRING

                    10 ->
                        Proto__Google__Protobuf__FieldDescriptorProto__TYPEGROUP

                    11 ->
                        Proto__Google__Protobuf__FieldDescriptorProto__TYPEMESSAGE

                    12 ->
                        Proto__Google__Protobuf__FieldDescriptorProto__TYPEBYTES

                    13 ->
                        Proto__Google__Protobuf__FieldDescriptorProto__TYPEUINT32

                    14 ->
                        Proto__Google__Protobuf__FieldDescriptorProto__TYPEENUM

                    15 ->
                        Proto__Google__Protobuf__FieldDescriptorProto__TYPESFIXED32

                    16 ->
                        Proto__Google__Protobuf__FieldDescriptorProto__TYPESFIXED64

                    17 ->
                        Proto__Google__Protobuf__FieldDescriptorProto__TYPESINT32

                    18 ->
                        Proto__Google__Protobuf__FieldDescriptorProto__TYPESINT64

                    _ ->
                        Proto__Google__Protobuf__FieldDescriptorProto__TYPEDOUBLE
            )


{-| `Proto__Google__Protobuf__FieldDescriptorProto__Type` enumeration


-}
type Proto__Google__Protobuf__FieldDescriptorProto__Type
    = Proto__Google__Protobuf__FieldDescriptorProto__TYPEDOUBLE
    | Proto__Google__Protobuf__FieldDescriptorProto__TYPEFLOAT
    | Proto__Google__Protobuf__FieldDescriptorProto__TYPEINT64
    | Proto__Google__Protobuf__FieldDescriptorProto__TYPEUINT64
    | Proto__Google__Protobuf__FieldDescriptorProto__TYPEINT32
    | Proto__Google__Protobuf__FieldDescriptorProto__TYPEFIXED64
    | Proto__Google__Protobuf__FieldDescriptorProto__TYPEFIXED32
    | Proto__Google__Protobuf__FieldDescriptorProto__TYPEBOOL
    | Proto__Google__Protobuf__FieldDescriptorProto__TYPESTRING
    | Proto__Google__Protobuf__FieldDescriptorProto__TYPEGROUP
    | Proto__Google__Protobuf__FieldDescriptorProto__TYPEMESSAGE
    | Proto__Google__Protobuf__FieldDescriptorProto__TYPEBYTES
    | Proto__Google__Protobuf__FieldDescriptorProto__TYPEUINT32
    | Proto__Google__Protobuf__FieldDescriptorProto__TYPEENUM
    | Proto__Google__Protobuf__FieldDescriptorProto__TYPESFIXED32
    | Proto__Google__Protobuf__FieldDescriptorProto__TYPESFIXED64
    | Proto__Google__Protobuf__FieldDescriptorProto__TYPESINT32
    | Proto__Google__Protobuf__FieldDescriptorProto__TYPESINT64
