{- !!! DO NOT EDIT THIS FILE MANUALLY !!! -}

module Proto.Google.Protobuf.MethodOptions.IdempotencyLevel exposing (IdempotencyLevel(..), decodeIdempotencyLevel, defaultIdempotencyLevel, encodeIdempotencyLevel, fieldNumbersIdempotencyLevel, jsonDecodeIdempotencyLevel, jsonEncodeIdempotencyLevel)

{-| 
This file was automatically generated by
- [`protoc-gen-elm`](https://www.npmjs.com/package/protoc-gen-elm) 4.0.0
- `protoc` 3.19.4
- the following specification files: `google/protobuf/descriptor.proto`

To run it, add a dependency via `elm install` on [`elm-protocol-buffers`](https://package.elm-lang.org/packages/eriktim/elm-protocol-buffers/1.2.0) version 1.2.0 or higher.

@docs IdempotencyLevel, decodeIdempotencyLevel, defaultIdempotencyLevel, encodeIdempotencyLevel, fieldNumbersIdempotencyLevel

@docs jsonDecodeIdempotencyLevel, jsonEncodeIdempotencyLevel

-}

import Json.Decode
import Json.Encode
import Protobuf.Decode
import Protobuf.Encode
import Protobuf.Utils.Int32


{-| Decode a `IdempotencyLevel` from JSON. Uses the canonical encoding described here: https://protobuf.dev/programming-guides/proto3/#json

-}
jsonDecodeIdempotencyLevel : Json.Decode.Decoder IdempotencyLevel
jsonDecodeIdempotencyLevel =
    Json.Decode.oneOf
        [ Json.Decode.string
            |> Json.Decode.map
                (\i ->
                    case i of
                        "IDEMPOTENCY_UNKNOWN" ->
                            IDEMPOTENCYUNKNOWN

                        "NO_SIDE_EFFECTS" ->
                            NOSIDEEFFECTS

                        "IDEMPOTENT" ->
                            IDEMPOTENT

                        _ ->
                            IDEMPOTENCYUNKNOWN
                )
        , Protobuf.Utils.Int32.int32JsonDecoder
            |> Json.Decode.map
                (\i ->
                    case i of
                        0 ->
                            IDEMPOTENCYUNKNOWN

                        1 ->
                            NOSIDEEFFECTS

                        2 ->
                            IDEMPOTENT

                        _ ->
                            IDEMPOTENCYUNKNOWN
                )
        ]


{-| Encode a `IdempotencyLevel` to JSON. Uses the canonical encoding described here: https://protobuf.dev/programming-guides/proto3/#json

-}
jsonEncodeIdempotencyLevel : IdempotencyLevel -> Json.Encode.Value
jsonEncodeIdempotencyLevel value =
    Json.Encode.string <|
        case value of
            IDEMPOTENCYUNKNOWN ->
                "IDEMPOTENCY_UNKNOWN"

            NOSIDEEFFECTS ->
                "NO_SIDE_EFFECTS"

            IDEMPOTENT ->
                "IDEMPOTENT"


{-| The field numbers for the fields of `IdempotencyLevel`. This is mostly useful for internals, like documentation generation.

-}
fieldNumbersIdempotencyLevel : IdempotencyLevel -> Int
fieldNumbersIdempotencyLevel n_ =
    case n_ of
        IDEMPOTENCYUNKNOWN ->
            0

        NOSIDEEFFECTS ->
            1

        IDEMPOTENT ->
            2


{-| Default for IdempotencyLevel. Should only be used for 'required' decoders as an initial value.

-}
defaultIdempotencyLevel : IdempotencyLevel
defaultIdempotencyLevel =
    IDEMPOTENCYUNKNOWN


{-| Declares how to encode a `IdempotencyLevel` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.

-}
encodeIdempotencyLevel : IdempotencyLevel -> Protobuf.Encode.Encoder
encodeIdempotencyLevel value =
    Protobuf.Encode.int32 <|
        case value of
            IDEMPOTENCYUNKNOWN ->
                0

            NOSIDEEFFECTS ->
                1

            IDEMPOTENT ->
                2


{-| Declares how to decode a `IdempotencyLevel` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.

-}
decodeIdempotencyLevel : Protobuf.Decode.Decoder IdempotencyLevel
decodeIdempotencyLevel =
    Protobuf.Decode.int32
        |> Protobuf.Decode.map
            (\i ->
                case i of
                    0 ->
                        IDEMPOTENCYUNKNOWN

                    1 ->
                        NOSIDEEFFECTS

                    2 ->
                        IDEMPOTENT

                    _ ->
                        IDEMPOTENCYUNKNOWN
            )


{-| `IdempotencyLevel` enumeration

-}
type IdempotencyLevel
    = IDEMPOTENCYUNKNOWN
    | NOSIDEEFFECTS
    | IDEMPOTENT
